{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Authentication-Task\\\\frontsidee\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, FormControl, FormLabel, Input, useToast } from '@chakra-ui/react';\nimport { registerUser } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [fullname, setFullname] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const handleRegister = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const response = await registerUser({\n        fullname,\n        username,\n        email,\n        password\n      });\n      toast({\n        title: 'User registered successfully!',\n        status: 'success',\n        duration: 2000,\n        isClosable: true\n      });\n    } catch (error) {\n      toast({\n        title: 'Registration failed',\n        description: error,\n        status: 'error',\n        duration: 2000,\n        isClosable: true\n      });\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxWidth: \"400px\",\n    mx: \"auto\",\n    mt: \"50px\",\n    p: \"5\",\n    borderRadius: \"md\",\n    boxShadow: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        mb: \"4\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: fullname,\n          onChange: e => setFullname(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        mb: \"4\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        mb: \"4\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        mb: \"4\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"teal\",\n        width: \"full\",\n        isLoading: loading,\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"V7yIibeuOu1S9j6F+XevQIHK4HA=\", false, function () {\n  return [useToast];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Box","Button","FormControl","FormLabel","Input","useToast","registerUser","jsxDEV","_jsxDEV","Register","_s","fullname","setFullname","username","setUsername","email","setEmail","password","setPassword","loading","setLoading","toast","handleRegister","e","preventDefault","response","title","status","duration","isClosable","error","description","maxWidth","mx","mt","p","borderRadius","boxShadow","children","onSubmit","mb","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","colorScheme","width","isLoading","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Authentication-Task/frontsidee/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Button, FormControl, FormLabel, Input, useToast } from '@chakra-ui/react';\r\nimport { registerUser } from '../services/authService';\r\n\r\nconst Register = () => {\r\n  const [fullname, setFullname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const response = await registerUser({ fullname, username, email, password });\r\n      toast({\r\n        title: 'User registered successfully!',\r\n        status: 'success',\r\n        duration: 2000,\r\n        isClosable: true,\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Registration failed',\r\n        description: error,\r\n        status: 'error',\r\n        duration: 2000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Box maxWidth=\"400px\" mx=\"auto\" mt=\"50px\" p=\"5\" borderRadius=\"md\" boxShadow=\"lg\">\r\n      <form onSubmit={handleRegister}>\r\n        <FormControl mb=\"4\">\r\n          <FormLabel>Full Name</FormLabel>\r\n          <Input type=\"text\" value={fullname} onChange={(e) => setFullname(e.target.value)} required />\r\n        </FormControl>\r\n        <FormControl mb=\"4\">\r\n          <FormLabel>Username</FormLabel>\r\n          <Input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n        </FormControl>\r\n        <FormControl mb=\"4\">\r\n          <FormLabel>Email</FormLabel>\r\n          <Input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n        </FormControl>\r\n        <FormControl mb=\"4\">\r\n          <FormLabel>Password</FormLabel>\r\n          <Input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n        </FormControl>\r\n        <Button colorScheme=\"teal\" width=\"full\" isLoading={loading} type=\"submit\">\r\n          Register\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}