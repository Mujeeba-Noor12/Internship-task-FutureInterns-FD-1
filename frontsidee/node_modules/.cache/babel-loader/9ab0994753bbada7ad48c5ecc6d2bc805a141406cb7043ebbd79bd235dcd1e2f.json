{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Authentication-Task\\\\frontsidee\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// // import axios from 'axios';\n// // import './Registertion.css'; // Import the updated CSS\n// // import { FaUser, FaUserCircle, FaEnvelope, FaLock } from 'react-icons/fa'; // Importing icons\n// // import registerImage from './login.png'; // Add an image for the left section\n\n// // const Register = () => {\n// //   const [fullname, setFullname] = useState('');\n// //   const [username, setUsername] = useState('');\n// //   const [email, setEmail] = useState('');\n// //   const [password, setPassword] = useState('');\n// //   const [confirmPassword, setconfirmPassword] = useState('');\n// //   const [loading, setLoading] = useState(false);\n// //   const [passwordError, setPasswordError] = useState('');\n// //   const [message, setMessage] = useState('');\n// //   const navigate = useNavigate(); // Initialize navigate function\n\n// //   const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;\n// //   const handlePasswordChange = (e) => {\n// //     const value = e.target.value;\n// //     setPassword(value);\n\n// //     if (!passwordRegex.test(value)) {\n// //       setPasswordError(\n// //         'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\n// //       );\n// //     } else {\n// //       setPasswordError('');\n// //     }\n// //   };\n\n// //   const handleSubmit = async (event) => {\n// //     event.preventDefault();\n// //     if (!passwordRegex.test(password)) {\n// //       setPasswordError(\n// //       alert ('Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.') \n// //       );\n// //       alert('Please ensure the password meets the requirements.');\n// //       return; // Stop the form submission\n// //     }\n\n// //     setLoading(true); // Show the loading state\n// //     setPasswordError(''); // Clear any previous errors\n\n// //     try {\n// //       const response = await axios.post('http://localhost:4000/api/users/register', {\n// //         fullname,\n// //         username,\n// //         email,\n// //         password,\n// //         confirmPassword,\n// //       });\n// //       if(password!==confirmPassword){\n// //         alert('password does not match')\n// //       }\n\n// //       setMessage(response.data.message);\n// //       alert('Registration Successful: ' + response.data.message);\n// //       navigate('/')\n// //     } catch (error) {\n// //       setMessage(error.response?.data?.message || 'Something went wrong');\n// //       alert('Error: ' + (error.response?.data?.message || 'An error occurred'));\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"register-container\">\n// //       <div className=\"register-card\">\n// //         <div className=\"register-image\">\n// //           <img src={registerImage} alt=\"Welcome\" />\n// //         </div>\n\n// //         <form onSubmit={handleSubmit} className=\"register-form\">\n// //           <div className=\"register-header\">\n// //             <h2>Create Account</h2>\n// //             <p>Sign up to get started</p>\n// //           </div>\n\n// //           {/* Full Name */}\n// //           <div className=\"form-control\">\n// //             <div className=\"input-wrapper\">\n// //               <FaUserCircle className=\"input-icon\" />\n// //               <input\n// //                 type=\"text\"\n// //                 id=\"fullname\"\n// //                 value={fullname}\n// //                 onChange={(e) => setFullname(e.target.value)}\n// //                 placeholder=\"Enter your full name\"\n// //                 required\n// //               />\n// //             </div>\n// //           </div>\n\n// //           {/* Username */}\n// //           <div className=\"form-control\">\n// //             <div className=\"input-wrapper\">\n// //               <FaUser className=\"input-icon\" />\n// //               <input\n// //                 type=\"text\"\n// //                 id=\"username\"\n// //                 value={username}\n// //                 onChange={(e) => setUsername(e.target.value)}\n// //                 placeholder=\"Enter your username\"\n// //                 required\n// //               />\n// //             </div>\n// //           </div>\n\n// //           {/* Email */}\n// //           <div className=\"form-control\">\n// //             <div className=\"input-wrapper\">\n// //               <FaEnvelope className=\"input-icon\" />\n// //               <input\n// //                 type=\"email\"\n// //                 id=\"email\"\n// //                 value={email}\n// //                 onChange={(e) => setEmail(e.target.value)}\n// //                 placeholder=\"Enter your email\"\n// //                 required\n// //               />\n// //             </div>\n// //           </div>\n\n// //           {/* Password */}\n// //           <div className=\"form-control\">\n// //             <div className=\"input-wrapper\">\n// //               <FaLock className=\"input-icon\" />\n// //               <input\n// //                 type=\"password\"\n// //                 id=\"password\"\n// //                 value={password}\n// //                 onChange={handlePasswordChange}\n// //                 placeholder=\"Enter your password\"\n// //                 required\n// //               />\n// //             </div>\n// //             <div className=\"input-wrapper\">\n// //               <FaLock className=\"input-icon\" />\n// //               <input\n// //                 type=\"password\"\n// //                 id=\"password\"\n// //                 value={password}\n// //                 onChange={handlePasswordChange}\n// //                 placeholder=\"Confirm your password\"\n// //                 required\n// //               />\n// //             </div>\n// //              {/* {passwordError && <div className=\"password-error\">{passwordError}</div>} */}\n// //           </div> \n\n// //           {/* Submit Button */}\n// //           <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\n// //             {loading ? 'Registering...' : 'Register'}\n// //           </button>\n// //         </form>\n// //       </div>\n\n// //       {/* Success or Error Message */}\n// //       {message && (\n// //         <div className={message.startsWith('Error') ? 'error' : 'success'}>\n// //           {message}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default Register;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './Registertion.css'; // Import the updated CSS\n// import { FaUser, FaUserCircle, FaEnvelope, FaLock } from 'react-icons/fa'; // Importing icons\n// import registerImage from './login.png'; // Add an image for the left section\n\n// const Register = () => {\n//   const [fullname, setFullname] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [passwordError, setPasswordError] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate(); // Initialize navigate function\n\n//   const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;\n\n//   const handlePasswordChange = (e) => {\n//     const value = e.target.value;\n//     setPassword(value);\n\n//     if (!passwordRegex.test(value)) {\n//       setPasswordError(\n//         'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\n//       );\n//     } else {\n//       setPasswordError('');\n//     }\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     if (!passwordRegex.test(password)) {\n//       alert('Please ensure the password meets the requirements.');\n//       return; // Stop the form submission\n//     }\n\n//     if (password !== confirmPassword) {\n//       alert('Passwords do not match');\n//       return; // Stop the form submission\n//     }\n\n//     setLoading(true); // Show the loading state\n//     setPasswordError(''); // Clear any previous errors\n\n//     try {\n//       const response = await axios.post('http://localhost:4000/api/users/register', {\n//         fullname,\n//         username,\n//         email,\n//         password,\n//         confirmPassword,\n//       });\n\n//       setMessage(response.data.message);\n//       alert('Registration Successful: ' + response.data.message);\n//       navigate('/');\n//     } catch (error) {\n//       setMessage(error.response?.data?.message || 'Something went wrong');\n//       alert('Error: ' + (error.response?.data?.message || 'An error occurred'));\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"register-container\">\n//       <div className=\"register-card\">\n//         <div className=\"register-image\">\n//           <img src={registerImage} alt=\"Welcome\" />\n//         </div>\n\n//         <form onSubmit={handleSubmit} className=\"register-form\">\n//           <div className=\"register-header\">\n//             <h2>Create Account</h2>\n//             <p>Sign up to get started</p>\n//           </div>\n\n//           {/* Full Name */}\n//           <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaUserCircle className=\"input-icon\" />\n//               <input\n//                 type=\"text\"\n//                 id=\"fullname\"\n//                 value={fullname}\n//                 onChange={(e) => setFullname(e.target.value)}\n//                 placeholder=\"Enter your full name\"\n//                 required\n//               />\n//             </div>\n//           </div>\n\n//           {/* Username */}\n//           <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaUser className=\"input-icon\" />\n//               <input\n//                 type=\"text\"\n//                 id=\"username\"\n//                 value={username}\n//                 onChange={(e) => setUsername(e.target.value)}\n//                 placeholder=\"Enter your username\"\n//                 required\n//               />\n//             </div>\n//           </div>\n\n//           {/* Email */}\n//           <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaEnvelope className=\"input-icon\" />\n//               <input\n//                 type=\"email\"\n//                 id=\"email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 placeholder=\"Enter your email\"\n//                 required\n//               />\n//             </div>\n//           </div>\n\n//           {/* Password */}\n//           <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaLock className=\"input-icon\" />\n//               <input\n//                 type=\"password\"\n//                 id=\"password\"\n//                 value={password}\n//                 onChange={handlePasswordChange}\n//                 placeholder=\"Enter your password\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaLock className=\"input-icon\" />\n//               <input\n//                 type=\"password\"\n//                 id=\"password\"\n//                 value={confirmPassword}\n//                 onChange={handlePasswordChange}\n//                 placeholder=\"confirm your password\"\n//                 required\n//               />\n//             </div>\n//           </div>\n\n//           {/* Submit Button */}\n//           <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\n//             {loading ? 'Registering...' : 'Register'}\n//           </button>\n//         </form>\n//       </div>\n\n//       {/* Success or Error Message */}\n//       {message && (\n//         <div className={message.startsWith('Error') ? 'error' : 'success'}>\n//           {message}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Register;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Registertion.css'; // Import the updated CSS\nimport { FaUser, FaUserCircle, FaEnvelope, FaLock } from 'react-icons/fa'; // Importing icons\nimport registerImage from './login.png'; // Add an image for the left section\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [fullname, setFullname] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [passwordError, setPasswordError] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // Initialize navigate function\n\n  const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;\n  const handlePasswordChange = e => {\n    const value = e.target.value;\n    setPassword(value);\n    if (!passwordRegex.test(value)) {\n      setPasswordError('Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.');\n    } else {\n      setPasswordError('');\n    }\n  };\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      alert('Passwords do not match');\n      return; // Stop the form submission\n    }\n    if (!passwordRegex.test(password)) {\n      alert('Please ensure the password meets the requirements.');\n      return; // Stop the form submission\n    }\n    setLoading(true); // Show the loading state\n    setPasswordError(''); // Clear any previous errors\n\n    try {\n      const response = await axios.post('http://localhost:4000/api/users/register', {\n        fullname,\n        username,\n        email,\n        password,\n        confirmPassword\n      });\n      setMessage(response.data.message);\n      alert('Registration Successful: ' + response.data.message);\n      navigate('/');\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Something went wrong');\n      alert('Error: ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'An error occurred'));\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: registerImage,\n          alt: \"Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Sign up to get started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n              className: \"input-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"fullname\",\n              value: fullname,\n              onChange: e => setFullname(e.target.value),\n              placeholder: \"Enter your full name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(FaUser, {\n              className: \"input-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              placeholder: \"Enter your username\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(FaEnvelope, {\n              className: \"input-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Enter your email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(FaLock, {\n              className: \"input-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: handlePasswordChange,\n              placeholder: \"Enter your password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(FaLock, {\n              className: \"input-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              value: confirmPassword,\n              onChange: handleConfirmPasswordChange,\n              placeholder: \"Confirm your password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          disabled: loading,\n          children: loading ? 'Registering...' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.startsWith('Error') ? 'error' : 'success',\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 419,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"grk2PdvCBIb03f+X3RWuoPJt2XY=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","axios","FaUser","FaUserCircle","FaEnvelope","FaLock","registerImage","jsxDEV","_jsxDEV","Register","_s","fullname","setFullname","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","passwordError","setPasswordError","message","setMessage","navigate","passwordRegex","handlePasswordChange","e","value","target","test","handleConfirmPasswordChange","handleSubmit","event","preventDefault","alert","response","post","data","error","_error$response","_error$response$data","_error$response2","_error$response2$data","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","onChange","placeholder","required","disabled","startsWith","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Authentication-Task/frontsidee/src/components/Register.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import axios from 'axios';\r\n// // import './Registertion.css'; // Import the updated CSS\r\n// // import { FaUser, FaUserCircle, FaEnvelope, FaLock } from 'react-icons/fa'; // Importing icons\r\n// // import registerImage from './login.png'; // Add an image for the left section\r\n\r\n// // const Register = () => {\r\n// //   const [fullname, setFullname] = useState('');\r\n// //   const [username, setUsername] = useState('');\r\n// //   const [email, setEmail] = useState('');\r\n// //   const [password, setPassword] = useState('');\r\n// //   const [confirmPassword, setconfirmPassword] = useState('');\r\n// //   const [loading, setLoading] = useState(false);\r\n// //   const [passwordError, setPasswordError] = useState('');\r\n// //   const [message, setMessage] = useState('');\r\n// //   const navigate = useNavigate(); // Initialize navigate function\r\n\r\n// //   const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;\r\n// //   const handlePasswordChange = (e) => {\r\n// //     const value = e.target.value;\r\n// //     setPassword(value);\r\n\r\n// //     if (!passwordRegex.test(value)) {\r\n// //       setPasswordError(\r\n// //         'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\r\n// //       );\r\n// //     } else {\r\n// //       setPasswordError('');\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleSubmit = async (event) => {\r\n// //     event.preventDefault();\r\n// //     if (!passwordRegex.test(password)) {\r\n// //       setPasswordError(\r\n// //       alert ('Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.') \r\n// //       );\r\n// //       alert('Please ensure the password meets the requirements.');\r\n// //       return; // Stop the form submission\r\n// //     }\r\n    \r\n// //     setLoading(true); // Show the loading state\r\n// //     setPasswordError(''); // Clear any previous errors\r\n\r\n// //     try {\r\n// //       const response = await axios.post('http://localhost:4000/api/users/register', {\r\n// //         fullname,\r\n// //         username,\r\n// //         email,\r\n// //         password,\r\n// //         confirmPassword,\r\n// //       });\r\n// //       if(password!==confirmPassword){\r\n// //         alert('password does not match')\r\n// //       }\r\n\r\n// //       setMessage(response.data.message);\r\n// //       alert('Registration Successful: ' + response.data.message);\r\n// //       navigate('/')\r\n// //     } catch (error) {\r\n// //       setMessage(error.response?.data?.message || 'Something went wrong');\r\n// //       alert('Error: ' + (error.response?.data?.message || 'An error occurred'));\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"register-container\">\r\n// //       <div className=\"register-card\">\r\n// //         <div className=\"register-image\">\r\n// //           <img src={registerImage} alt=\"Welcome\" />\r\n// //         </div>\r\n\r\n// //         <form onSubmit={handleSubmit} className=\"register-form\">\r\n// //           <div className=\"register-header\">\r\n// //             <h2>Create Account</h2>\r\n// //             <p>Sign up to get started</p>\r\n// //           </div>\r\n\r\n// //           {/* Full Name */}\r\n// //           <div className=\"form-control\">\r\n// //             <div className=\"input-wrapper\">\r\n// //               <FaUserCircle className=\"input-icon\" />\r\n// //               <input\r\n// //                 type=\"text\"\r\n// //                 id=\"fullname\"\r\n// //                 value={fullname}\r\n// //                 onChange={(e) => setFullname(e.target.value)}\r\n// //                 placeholder=\"Enter your full name\"\r\n// //                 required\r\n// //               />\r\n// //             </div>\r\n// //           </div>\r\n\r\n// //           {/* Username */}\r\n// //           <div className=\"form-control\">\r\n// //             <div className=\"input-wrapper\">\r\n// //               <FaUser className=\"input-icon\" />\r\n// //               <input\r\n// //                 type=\"text\"\r\n// //                 id=\"username\"\r\n// //                 value={username}\r\n// //                 onChange={(e) => setUsername(e.target.value)}\r\n// //                 placeholder=\"Enter your username\"\r\n// //                 required\r\n// //               />\r\n// //             </div>\r\n// //           </div>\r\n\r\n// //           {/* Email */}\r\n// //           <div className=\"form-control\">\r\n// //             <div className=\"input-wrapper\">\r\n// //               <FaEnvelope className=\"input-icon\" />\r\n// //               <input\r\n// //                 type=\"email\"\r\n// //                 id=\"email\"\r\n// //                 value={email}\r\n// //                 onChange={(e) => setEmail(e.target.value)}\r\n// //                 placeholder=\"Enter your email\"\r\n// //                 required\r\n// //               />\r\n// //             </div>\r\n// //           </div>\r\n\r\n// //           {/* Password */}\r\n// //           <div className=\"form-control\">\r\n// //             <div className=\"input-wrapper\">\r\n// //               <FaLock className=\"input-icon\" />\r\n// //               <input\r\n// //                 type=\"password\"\r\n// //                 id=\"password\"\r\n// //                 value={password}\r\n// //                 onChange={handlePasswordChange}\r\n// //                 placeholder=\"Enter your password\"\r\n// //                 required\r\n// //               />\r\n// //             </div>\r\n// //             <div className=\"input-wrapper\">\r\n// //               <FaLock className=\"input-icon\" />\r\n// //               <input\r\n// //                 type=\"password\"\r\n// //                 id=\"password\"\r\n// //                 value={password}\r\n// //                 onChange={handlePasswordChange}\r\n// //                 placeholder=\"Confirm your password\"\r\n// //                 required\r\n// //               />\r\n// //             </div>\r\n// //              {/* {passwordError && <div className=\"password-error\">{passwordError}</div>} */}\r\n// //           </div> \r\n\r\n// //           {/* Submit Button */}\r\n// //           <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n// //             {loading ? 'Registering...' : 'Register'}\r\n// //           </button>\r\n// //         </form>\r\n// //       </div>\r\n\r\n// //       {/* Success or Error Message */}\r\n// //       {message && (\r\n// //         <div className={message.startsWith('Error') ? 'error' : 'success'}>\r\n// //           {message}\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Register;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './Registertion.css'; // Import the updated CSS\r\n// import { FaUser, FaUserCircle, FaEnvelope, FaLock } from 'react-icons/fa'; // Importing icons\r\n// import registerImage from './login.png'; // Add an image for the left section\r\n\r\n// const Register = () => {\r\n//   const [fullname, setFullname] = useState('');\r\n//   const [username, setUsername] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [passwordError, setPasswordError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const navigate = useNavigate(); // Initialize navigate function\r\n\r\n//   const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;\r\n\r\n//   const handlePasswordChange = (e) => {\r\n//     const value = e.target.value;\r\n//     setPassword(value);\r\n\r\n//     if (!passwordRegex.test(value)) {\r\n//       setPasswordError(\r\n//         'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\r\n//       );\r\n//     } else {\r\n//       setPasswordError('');\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     if (!passwordRegex.test(password)) {\r\n//       alert('Please ensure the password meets the requirements.');\r\n//       return; // Stop the form submission\r\n//     }\r\n\r\n//     if (password !== confirmPassword) {\r\n//       alert('Passwords do not match');\r\n//       return; // Stop the form submission\r\n//     }\r\n\r\n//     setLoading(true); // Show the loading state\r\n//     setPasswordError(''); // Clear any previous errors\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:4000/api/users/register', {\r\n//         fullname,\r\n//         username,\r\n//         email,\r\n//         password,\r\n//         confirmPassword,\r\n//       });\r\n\r\n//       setMessage(response.data.message);\r\n//       alert('Registration Successful: ' + response.data.message);\r\n//       navigate('/');\r\n//     } catch (error) {\r\n//       setMessage(error.response?.data?.message || 'Something went wrong');\r\n//       alert('Error: ' + (error.response?.data?.message || 'An error occurred'));\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"register-container\">\r\n//       <div className=\"register-card\">\r\n//         <div className=\"register-image\">\r\n//           <img src={registerImage} alt=\"Welcome\" />\r\n//         </div>\r\n\r\n//         <form onSubmit={handleSubmit} className=\"register-form\">\r\n//           <div className=\"register-header\">\r\n//             <h2>Create Account</h2>\r\n//             <p>Sign up to get started</p>\r\n//           </div>\r\n\r\n//           {/* Full Name */}\r\n//           <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaUserCircle className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 id=\"fullname\"\r\n//                 value={fullname}\r\n//                 onChange={(e) => setFullname(e.target.value)}\r\n//                 placeholder=\"Enter your full name\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Username */}\r\n//           <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaUser className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 id=\"username\"\r\n//                 value={username}\r\n//                 onChange={(e) => setUsername(e.target.value)}\r\n//                 placeholder=\"Enter your username\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Email */}\r\n//           <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaEnvelope className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"email\"\r\n//                 id=\"email\"\r\n//                 value={email}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//                 placeholder=\"Enter your email\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Password */}\r\n//           <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaLock className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"password\"\r\n//                 id=\"password\"\r\n//                 value={password}\r\n//                 onChange={handlePasswordChange}\r\n//                 placeholder=\"Enter your password\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaLock className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"password\"\r\n//                 id=\"password\"\r\n//                 value={confirmPassword}\r\n//                 onChange={handlePasswordChange}\r\n//                 placeholder=\"confirm your password\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Submit Button */}\r\n//           <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n//             {loading ? 'Registering...' : 'Register'}\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n\r\n//       {/* Success or Error Message */}\r\n//       {message && (\r\n//         <div className={message.startsWith('Error') ? 'error' : 'success'}>\r\n//           {message}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Registertion.css'; // Import the updated CSS\r\nimport { FaUser, FaUserCircle, FaEnvelope, FaLock } from 'react-icons/fa'; // Importing icons\r\nimport registerImage from './login.png'; // Add an image for the left section\r\n\r\nconst Register = () => {\r\n  const [fullname, setFullname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate(); // Initialize navigate function\r\n\r\n  const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const value = e.target.value;\r\n    setPassword(value);\r\n\r\n    if (!passwordRegex.test(value)) {\r\n      setPasswordError(\r\n        'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\r\n      );\r\n    } else {\r\n      setPasswordError('');\r\n    }\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('Passwords do not match');\r\n      return; // Stop the form submission\r\n    }\r\n\r\n    if (!passwordRegex.test(password)) {\r\n      alert('Please ensure the password meets the requirements.');\r\n      return; // Stop the form submission\r\n    }\r\n\r\n    setLoading(true); // Show the loading state\r\n    setPasswordError(''); // Clear any previous errors\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:4000/api/users/register', {\r\n        fullname,\r\n        username,\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n      });\r\n\r\n      setMessage(response.data.message);\r\n      alert('Registration Successful: ' + response.data.message);\r\n      navigate('/');\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.message || 'Something went wrong');\r\n      alert('Error: ' + (error.response?.data?.message || 'An error occurred'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <div className=\"register-card\">\r\n        <div className=\"register-image\">\r\n          <img src={registerImage} alt=\"Welcome\" />\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"register-form\">\r\n          <div className=\"register-header\">\r\n            <h2>Create Account</h2>\r\n            <p>Sign up to get started</p>\r\n          </div>\r\n\r\n          {/* Full Name */}\r\n          <div className=\"form-control\">\r\n            <div className=\"input-wrapper\">\r\n              <FaUserCircle className=\"input-icon\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"fullname\"\r\n                value={fullname}\r\n                onChange={(e) => setFullname(e.target.value)}\r\n                placeholder=\"Enter your full name\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Username */}\r\n          <div className=\"form-control\">\r\n            <div className=\"input-wrapper\">\r\n              <FaUser className=\"input-icon\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Enter your username\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Email */}\r\n          <div className=\"form-control\">\r\n            <div className=\"input-wrapper\">\r\n              <FaEnvelope className=\"input-icon\" />\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Enter your email\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Password */}\r\n          <div className=\"form-control\">\r\n            <div className=\"input-wrapper\">\r\n              <FaLock className=\"input-icon\" />\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n                placeholder=\"Enter your password\"\r\n                required\r\n              />\r\n            </div>\r\n           \r\n          </div>\r\n\r\n          {/* Confirm Password */}\r\n          <div className=\"form-control\">\r\n            <div className=\"input-wrapper\">\r\n              <FaLock className=\"input-icon\" />\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                onChange={handleConfirmPasswordChange}\r\n                placeholder=\"Confirm your password\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n            {loading ? 'Registering...' : 'Register'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Success or Error Message */}\r\n      {message && (\r\n        <div className={message.startsWith('Error') ? 'error' : 'success'}>\r\n          {message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}