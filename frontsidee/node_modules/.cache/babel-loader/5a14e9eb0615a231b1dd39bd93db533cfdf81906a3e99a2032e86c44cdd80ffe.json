{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Authentication-Task\\\\frontsidee\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './Registertion.css'; // Import the updated CSS\n// import { FaUser, FaUserCircle, FaEnvelope, FaLock } from 'react-icons/fa'; // Importing icons\n// import registerImage from './login.png'; // Add an image for the left section\n\n// const Register = () => {\n//   const [fullname, setFullname] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [passwordError, setPasswordError] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate(); // Initialize navigate function\n\n//   const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;\n//   const handlePasswordChange = (e) => {\n//     const value = e.target.value;\n//     setPassword(value);\n\n//     if (!passwordRegex.test(value)) {\n//       setPasswordError(\n//         'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\n//       );\n//     } else {\n//       setPasswordError('');\n//     }\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     if (!passwordRegex.test(password)) {\n//       setPasswordError(\n//         'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\n//       );\n//       alert('Please ensure the password meets the requirements.');\n//       return; // Stop the form submission\n//     }\n\n//     setLoading(true); // Show the loading state\n//     setPasswordError(''); // Clear any previous errors\n\n//     try {\n//       const response = await axios.post('http://localhost:4000/api/users/register', {\n//         fullname,\n//         username,\n//         email,\n//         password,\n//       });\n\n//       setMessage(response.data.message);\n//       alert('Registration Successful: ' + response.data.message);\n//       navigate('/')\n//     } catch (error) {\n//       setMessage(error.response?.data?.message || 'Something went wrong');\n//       alert('Error: ' + (error.response?.data?.message || 'An error occurred'));\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"register-container\">\n//       <div className=\"register-card\">\n//         <div className=\"register-image\">\n//           <img src={registerImage} alt=\"Welcome\" />\n//         </div>\n\n//         <form onSubmit={handleSubmit} className=\"register-form\">\n//           <div className=\"register-header\">\n//             <h2>Create Account</h2>\n//             <p>Sign up to get started</p>\n//           </div>\n\n//           {/* Full Name */}\n//           <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaUserCircle className=\"input-icon\" />\n//               <input\n//                 type=\"text\"\n//                 id=\"fullname\"\n//                 value={fullname}\n//                 onChange={(e) => setFullname(e.target.value)}\n//                 placeholder=\"Enter your full name\"\n//                 required\n//               />\n//             </div>\n//           </div>\n\n//           {/* Username */}\n//           <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaUser className=\"input-icon\" />\n//               <input\n//                 type=\"text\"\n//                 id=\"username\"\n//                 value={username}\n//                 onChange={(e) => setUsername(e.target.value)}\n//                 placeholder=\"Enter your username\"\n//                 required\n//               />\n//             </div>\n//           </div>\n\n//           {/* Email */}\n//           <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaEnvelope className=\"input-icon\" />\n//               <input\n//                 type=\"email\"\n//                 id=\"email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 placeholder=\"Enter your email\"\n//                 required\n//               />\n//             </div>\n//           </div>\n\n//           {/* Password */}\n//           <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaLock className=\"input-icon\" />\n//               <input\n//                 type=\"password\"\n//                 id=\"password\"\n//                 value={password}\n//                 onChange={handlePasswordChange}\n//                 placeholder=\"Enter your password\"\n//                 required\n//               />\n//             </div>\n//             {/* Display password error message */}\n//             {passwordError && <div className=\"password-error\">{passwordError}</div>}\n//           </div>\n\n//           {/* Submit Button */}\n//           <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\n//             {loading ? 'Registering...' : 'Register'}\n//           </button>\n//         </form>\n//       </div>\n\n//       {/* Success or Error Message */}\n//       {message && (\n//         <div className={message.startsWith('Error') ? 'error' : 'success'}>\n//           {message}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Register;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Registertion.css'; // Import the updated CSS\nimport { FaUser, FaUserCircle, FaEnvelope, FaLock } from 'react-icons/fa'; // Importing icons\nimport registerImage from './login.png'; // Add an image for the left section\nimport { toast } from 'react-toastify'; // Import toast from react-toastify\nimport 'react-toastify/dist/ReactToastify.css'; // Import toast styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [fullname, setFullname] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [passwordError, setPasswordError] = useState('');\n  const navigate = useNavigate(); // Initialize navigate function\n\n  const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;\n  const handlePasswordChange = e => {\n    const value = e.target.value;\n    setPassword(value);\n    if (!passwordRegex.test(value)) {\n      setPasswordError('Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.');\n    } else {\n      setPasswordError('');\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!passwordRegex.test(password)) {\n      setPasswordError('Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.');\n      toast.error('Please ensure the password meets the requirements.');\n      return; // Stop the form submission\n    }\n    setLoading(true); // Show the loading state\n    setPasswordError(''); // Clear any previous errors\n\n    try {\n      const response = await axios.post('http://localhost:4000/api/users/register', {\n        fullname,\n        username,\n        email,\n        password\n      });\n      toast.success('Registration Successful: ' + response.data.message);\n      navigate('/');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error('Error: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred'));\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: registerImage,\n          alt: \"Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Sign up to get started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n              className: \"input-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"fullname\",\n              value: fullname,\n              onChange: e => setFullname(e.target.value),\n              placeholder: \"Enter your full name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(FaUser, {\n              className: \"input-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              placeholder: \"Enter your username\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(FaEnvelope, {\n              className: \"input-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Enter your email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(FaLock, {\n              className: \"input-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: handlePasswordChange,\n              placeholder: \"Enter your password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-error\",\n            children: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          disabled: loading,\n          children: loading ? 'Registering...' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(toast.Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"f+y/tpmUN/5rw2Km5KL5CBa2FFQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","axios","FaUser","FaUserCircle","FaEnvelope","FaLock","registerImage","toast","jsxDEV","_jsxDEV","Register","_s","fullname","setFullname","username","setUsername","email","setEmail","password","setPassword","loading","setLoading","passwordError","setPasswordError","navigate","passwordRegex","handlePasswordChange","e","value","target","test","handleSubmit","event","preventDefault","error","response","post","success","data","message","_error$response","_error$response$data","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","onChange","placeholder","required","disabled","Container","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Authentication-Task/frontsidee/src/components/Register.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './Registertion.css'; // Import the updated CSS\r\n// import { FaUser, FaUserCircle, FaEnvelope, FaLock } from 'react-icons/fa'; // Importing icons\r\n// import registerImage from './login.png'; // Add an image for the left section\r\n\r\n// const Register = () => {\r\n//   const [fullname, setFullname] = useState('');\r\n//   const [username, setUsername] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [passwordError, setPasswordError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const navigate = useNavigate(); // Initialize navigate function\r\n\r\n//   const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;\r\n//   const handlePasswordChange = (e) => {\r\n//     const value = e.target.value;\r\n//     setPassword(value);\r\n\r\n//     if (!passwordRegex.test(value)) {\r\n//       setPasswordError(\r\n//         'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\r\n//       );\r\n//     } else {\r\n//       setPasswordError('');\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     if (!passwordRegex.test(password)) {\r\n//       setPasswordError(\r\n//         'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\r\n//       );\r\n//       alert('Please ensure the password meets the requirements.');\r\n//       return; // Stop the form submission\r\n//     }\r\n    \r\n//     setLoading(true); // Show the loading state\r\n//     setPasswordError(''); // Clear any previous errors\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:4000/api/users/register', {\r\n//         fullname,\r\n//         username,\r\n//         email,\r\n//         password,\r\n//       });\r\n\r\n//       setMessage(response.data.message);\r\n//       alert('Registration Successful: ' + response.data.message);\r\n//       navigate('/')\r\n//     } catch (error) {\r\n//       setMessage(error.response?.data?.message || 'Something went wrong');\r\n//       alert('Error: ' + (error.response?.data?.message || 'An error occurred'));\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"register-container\">\r\n//       <div className=\"register-card\">\r\n//         <div className=\"register-image\">\r\n//           <img src={registerImage} alt=\"Welcome\" />\r\n//         </div>\r\n\r\n//         <form onSubmit={handleSubmit} className=\"register-form\">\r\n//           <div className=\"register-header\">\r\n//             <h2>Create Account</h2>\r\n//             <p>Sign up to get started</p>\r\n//           </div>\r\n\r\n//           {/* Full Name */}\r\n//           <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaUserCircle className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 id=\"fullname\"\r\n//                 value={fullname}\r\n//                 onChange={(e) => setFullname(e.target.value)}\r\n//                 placeholder=\"Enter your full name\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Username */}\r\n//           <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaUser className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 id=\"username\"\r\n//                 value={username}\r\n//                 onChange={(e) => setUsername(e.target.value)}\r\n//                 placeholder=\"Enter your username\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Email */}\r\n//           <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaEnvelope className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"email\"\r\n//                 id=\"email\"\r\n//                 value={email}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//                 placeholder=\"Enter your email\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Password */}\r\n//           <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaLock className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"password\"\r\n//                 id=\"password\"\r\n//                 value={password}\r\n//                 onChange={handlePasswordChange}\r\n//                 placeholder=\"Enter your password\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             {/* Display password error message */}\r\n//             {passwordError && <div className=\"password-error\">{passwordError}</div>}\r\n//           </div>\r\n\r\n//           {/* Submit Button */}\r\n//           <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n//             {loading ? 'Registering...' : 'Register'}\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n\r\n//       {/* Success or Error Message */}\r\n//       {message && (\r\n//         <div className={message.startsWith('Error') ? 'error' : 'success'}>\r\n//           {message}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Registertion.css'; // Import the updated CSS\r\nimport { FaUser, FaUserCircle, FaEnvelope, FaLock } from 'react-icons/fa'; // Importing icons\r\nimport registerImage from './login.png'; // Add an image for the left section\r\nimport { toast } from 'react-toastify'; // Import toast from react-toastify\r\nimport 'react-toastify/dist/ReactToastify.css'; // Import toast styles\r\n\r\nconst Register = () => {\r\n  const [fullname, setFullname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const navigate = useNavigate(); // Initialize navigate function\r\n\r\n  const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;\r\n  const handlePasswordChange = (e) => {\r\n    const value = e.target.value;\r\n    setPassword(value);\r\n\r\n    if (!passwordRegex.test(value)) {\r\n      setPasswordError(\r\n        'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\r\n      );\r\n    } else {\r\n      setPasswordError('');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!passwordRegex.test(password)) {\r\n      setPasswordError(\r\n        'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\r\n      );\r\n      toast.error('Please ensure the password meets the requirements.');\r\n      return; // Stop the form submission\r\n    }\r\n\r\n    setLoading(true); // Show the loading state\r\n    setPasswordError(''); // Clear any previous errors\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:4000/api/users/register', {\r\n        fullname,\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n\r\n      toast.success('Registration Successful: ' + response.data.message);\r\n      navigate('/');\r\n    } catch (error) {\r\n      toast.error('Error: ' + (error.response?.data?.message || 'An error occurred'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <div className=\"register-card\">\r\n        <div className=\"register-image\">\r\n          <img src={registerImage} alt=\"Welcome\" />\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"register-form\">\r\n          <div className=\"register-header\">\r\n            <h2>Create Account</h2>\r\n            <p>Sign up to get started</p>\r\n          </div>\r\n\r\n          {/* Full Name */}\r\n          <div className=\"form-control\">\r\n            <div className=\"input-wrapper\">\r\n              <FaUserCircle className=\"input-icon\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"fullname\"\r\n                value={fullname}\r\n                onChange={(e) => setFullname(e.target.value)}\r\n                placeholder=\"Enter your full name\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Username */}\r\n          <div className=\"form-control\">\r\n            <div className=\"input-wrapper\">\r\n              <FaUser className=\"input-icon\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Enter your username\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Email */}\r\n          <div className=\"form-control\">\r\n            <div className=\"input-wrapper\">\r\n              <FaEnvelope className=\"input-icon\" />\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Enter your email\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Password */}\r\n          <div className=\"form-control\">\r\n            <div className=\"input-wrapper\">\r\n              <FaLock className=\"input-icon\" />\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n                placeholder=\"Enter your password\"\r\n                required\r\n              />\r\n            </div>\r\n            {/* Display password error message */}\r\n            {passwordError && <div className=\"password-error\">{passwordError}</div>}\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n            {loading ? 'Registering...' : 'Register'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Toast container */}\r\n      <toast.Container />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB,CAAC,CAAC;AAC7B,SAASC,MAAM,EAAEC,YAAY,EAAEC,UAAU,EAAEC,MAAM,QAAQ,gBAAgB,CAAC,CAAC;AAC3E,OAAOC,aAAa,MAAM,aAAa,CAAC,CAAC;AACzC,SAASC,KAAK,QAAQ,gBAAgB,CAAC,CAAC;AACxC,OAAO,uCAAuC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}