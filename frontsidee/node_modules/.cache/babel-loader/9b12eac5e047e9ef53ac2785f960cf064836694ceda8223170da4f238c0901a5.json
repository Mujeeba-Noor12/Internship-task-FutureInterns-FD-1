{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './Registertion.css'; // Import the updated CSS\n// import { FaUser, FaUserCircle, FaEnvelope, FaLock } from 'react-icons/fa'; // Importing icons\n// import registerImage from './login.png'; // Add an image for the left section\n\n// const Register = () => {\n//   const [fullname, setFullname] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [passwordError, setPasswordError] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate(); // Initialize navigate function\n\n//   const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;\n//   const handlePasswordChange = (e) => {\n//     const value = e.target.value;\n//     setPassword(value);\n\n//     if (!passwordRegex.test(value)) {\n//       setPasswordError(\n//         'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\n//       );\n//     } else {\n//       setPasswordError('');\n//     }\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     if (!passwordRegex.test(password)) {\n//       setPasswordError(\n//         'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\n//       );\n//       alert('Please ensure the password meets the requirements.');\n//       return; // Stop the form submission\n//     }\n\n//     setLoading(true); // Show the loading state\n//     setPasswordError(''); // Clear any previous errors\n\n//     try {\n//       const response = await axios.post('http://localhost:4000/api/users/register', {\n//         fullname,\n//         username,\n//         email,\n//         password,\n//       });\n\n//       setMessage(response.data.message);\n//       alert('Registration Successful: ' + response.data.message);\n//       navigate('/')\n//     } catch (error) {\n//       setMessage(error.response?.data?.message || 'Something went wrong');\n//       alert('Error: ' + (error.response?.data?.message || 'An error occurred'));\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"register-container\">\n//       <div className=\"register-card\">\n//         <div className=\"register-image\">\n//           <img src={registerImage} alt=\"Welcome\" />\n//         </div>\n\n//         <form onSubmit={handleSubmit} className=\"register-form\">\n//           <div className=\"register-header\">\n//             <h2>Create Account</h2>\n//             <p>Sign up to get started</p>\n//           </div>\n\n//           {/* Full Name */}\n//           <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaUserCircle className=\"input-icon\" />\n//               <input\n//                 type=\"text\"\n//                 id=\"fullname\"\n//                 value={fullname}\n//                 onChange={(e) => setFullname(e.target.value)}\n//                 placeholder=\"Enter your full name\"\n//                 required\n//               />\n//             </div>\n//           </div>\n\n//           {/* Username */}\n//           <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaUser className=\"input-icon\" />\n//               <input\n//                 type=\"text\"\n//                 id=\"username\"\n//                 value={username}\n//                 onChange={(e) => setUsername(e.target.value)}\n//                 placeholder=\"Enter your username\"\n//                 required\n//               />\n//             </div>\n//           </div>\n\n//           {/* Email */}\n//           <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaEnvelope className=\"input-icon\" />\n//               <input\n//                 type=\"email\"\n//                 id=\"email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 placeholder=\"Enter your email\"\n//                 required\n//               />\n//             </div>\n//           </div>\n\n//           {/* Password */}\n//           <div className=\"form-control\">\n//             <div className=\"input-wrapper\">\n//               <FaLock className=\"input-icon\" />\n//               <input\n//                 type=\"password\"\n//                 id=\"password\"\n//                 value={password}\n//                 onChange={handlePasswordChange}\n//                 placeholder=\"Enter your password\"\n//                 required\n//               />\n//             </div>\n//             {/* Display password error message */}\n//             {passwordError && <div className=\"password-error\">{passwordError}</div>}\n//           </div>\n\n//           {/* Submit Button */}\n//           <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\n//             {loading ? 'Registering...' : 'Register'}\n//           </button>\n//         </form>\n//       </div>\n\n//       {/* Success or Error Message */}\n//       {message && (\n//         <div className={message.startsWith('Error') ? 'error' : 'success'}>\n//           {message}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Register;","map":{"version":3,"names":[],"sources":["C:/Users/Dell/Desktop/Authentication-Task/frontsidee/src/components/Register.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './Registertion.css'; // Import the updated CSS\r\n// import { FaUser, FaUserCircle, FaEnvelope, FaLock } from 'react-icons/fa'; // Importing icons\r\n// import registerImage from './login.png'; // Add an image for the left section\r\n\r\n// const Register = () => {\r\n//   const [fullname, setFullname] = useState('');\r\n//   const [username, setUsername] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [passwordError, setPasswordError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const navigate = useNavigate(); // Initialize navigate function\r\n\r\n//   const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;\r\n//   const handlePasswordChange = (e) => {\r\n//     const value = e.target.value;\r\n//     setPassword(value);\r\n\r\n//     if (!passwordRegex.test(value)) {\r\n//       setPasswordError(\r\n//         'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\r\n//       );\r\n//     } else {\r\n//       setPasswordError('');\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     if (!passwordRegex.test(password)) {\r\n//       setPasswordError(\r\n//         'Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.'\r\n//       );\r\n//       alert('Please ensure the password meets the requirements.');\r\n//       return; // Stop the form submission\r\n//     }\r\n    \r\n//     setLoading(true); // Show the loading state\r\n//     setPasswordError(''); // Clear any previous errors\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:4000/api/users/register', {\r\n//         fullname,\r\n//         username,\r\n//         email,\r\n//         password,\r\n//       });\r\n\r\n//       setMessage(response.data.message);\r\n//       alert('Registration Successful: ' + response.data.message);\r\n//       navigate('/')\r\n//     } catch (error) {\r\n//       setMessage(error.response?.data?.message || 'Something went wrong');\r\n//       alert('Error: ' + (error.response?.data?.message || 'An error occurred'));\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"register-container\">\r\n//       <div className=\"register-card\">\r\n//         <div className=\"register-image\">\r\n//           <img src={registerImage} alt=\"Welcome\" />\r\n//         </div>\r\n\r\n//         <form onSubmit={handleSubmit} className=\"register-form\">\r\n//           <div className=\"register-header\">\r\n//             <h2>Create Account</h2>\r\n//             <p>Sign up to get started</p>\r\n//           </div>\r\n\r\n//           {/* Full Name */}\r\n//           <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaUserCircle className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 id=\"fullname\"\r\n//                 value={fullname}\r\n//                 onChange={(e) => setFullname(e.target.value)}\r\n//                 placeholder=\"Enter your full name\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Username */}\r\n//           <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaUser className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 id=\"username\"\r\n//                 value={username}\r\n//                 onChange={(e) => setUsername(e.target.value)}\r\n//                 placeholder=\"Enter your username\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Email */}\r\n//           <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaEnvelope className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"email\"\r\n//                 id=\"email\"\r\n//                 value={email}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//                 placeholder=\"Enter your email\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Password */}\r\n//           <div className=\"form-control\">\r\n//             <div className=\"input-wrapper\">\r\n//               <FaLock className=\"input-icon\" />\r\n//               <input\r\n//                 type=\"password\"\r\n//                 id=\"password\"\r\n//                 value={password}\r\n//                 onChange={handlePasswordChange}\r\n//                 placeholder=\"Enter your password\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             {/* Display password error message */}\r\n//             {passwordError && <div className=\"password-error\">{passwordError}</div>}\r\n//           </div>\r\n\r\n//           {/* Submit Button */}\r\n//           <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n//             {loading ? 'Registering...' : 'Register'}\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n\r\n//       {/* Success or Error Message */}\r\n//       {message && (\r\n//         <div className={message.startsWith('Error') ? 'error' : 'success'}>\r\n//           {message}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}