{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Authentication-Task\\\\frontsidee\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import Register from './components/Register.js';\n// import Login from './components/Login.js';\n\n// function App() {\n//   return (\n//       <Router>\n//         <Routes>\n//           <Route path=\"/register\" element={<Register />} />\n//           <Route path=\"/\" element={<Login />} />\n//         </Routes>\n//       </Router>\n//   );\n// }\n\n// export default App;\n// src/App.js\nimport React, { useContext } from 'react';\nimport { BrowserRouter as Router, Route, useNavigate } from 'react-router-dom';\nimport AuthContext from './context/AuthContext'; // Import AuthContext\nimport ProtectedRoute from './components/ProtectedRoute.js'; // Import ProtectedRoute\nimport Login from './components/Login.js'; // Login Page\nimport Register from './components/Register.js'; // Register Page\nimport Dashboard from './pages/Dashboard.js'; // Protected Page\nimport AdminPanel from './pages/AdminPanel.js'; // Admin-only page (if needed)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext); // Get the user from AuthContext\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/register\",\n      component: Register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      path: \"/dashboard\",\n      component: Dashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      path: \"/admin\",\n      component: AdminPanel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), \"navigate('/')\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CVWIIDWuxG3gFZZa/BTAwr3ajXo=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","BrowserRouter","Router","Route","useNavigate","AuthContext","ProtectedRoute","Login","Register","Dashboard","AdminPanel","jsxDEV","_jsxDEV","App","_s","user","navigate","children","path","component","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Authentication-Task/frontsidee/src/App.js"],"sourcesContent":["// import React from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import Register from './components/Register.js';\n// import Login from './components/Login.js';\n\n// function App() {\n//   return (\n//       <Router>\n//         <Routes>\n//           <Route path=\"/register\" element={<Register />} />\n//           <Route path=\"/\" element={<Login />} />\n//         </Routes>\n//       </Router>\n//   );\n// }\n\n// export default App;\n// src/App.js\nimport React, { useContext } from 'react';\nimport { BrowserRouter as Router, Route, useNavigate } from 'react-router-dom';\nimport AuthContext from './context/AuthContext';  // Import AuthContext\nimport ProtectedRoute from './components/ProtectedRoute.js';  // Import ProtectedRoute\nimport Login from './components/Login.js';  // Login Page\nimport Register from './components/Register.js';  // Register Page\nimport Dashboard from './pages/Dashboard.js';  // Protected Page\nimport AdminPanel from './pages/AdminPanel.js';  // Admin-only page (if needed)\n\nfunction App() {\n  const { user } = useContext(AuthContext);  // Get the user from AuthContext\n  const navigate = useNavigate();\n\n  return (\n    <Router>\n      \n        {/* Public Routes */}\n        <Route path=\"/\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n\n        {/* Protected Routes */}\n        <ProtectedRoute path=\"/dashboard\" component={Dashboard} />\n        <ProtectedRoute path=\"/admin\" component={AdminPanel} />\n\n        {/* Redirect to login if route doesn't match */}\n        {/* <Redirect to=\"/login\" /> */}\n    navigate('/')\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AAC9E,OAAOC,WAAW,MAAM,uBAAuB,CAAC,CAAE;AAClD,OAAOC,cAAc,MAAM,gCAAgC,CAAC,CAAE;AAC9D,OAAOC,KAAK,MAAM,uBAAuB,CAAC,CAAE;AAC5C,OAAOC,QAAQ,MAAM,0BAA0B,CAAC,CAAE;AAClD,OAAOC,SAAS,MAAM,sBAAsB,CAAC,CAAE;AAC/C,OAAOC,UAAU,MAAM,uBAAuB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC;EAAK,CAAC,GAAGf,UAAU,CAACK,WAAW,CAAC,CAAC,CAAE;EAC3C,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,oBACEQ,OAAA,CAACV,MAAM;IAAAe,QAAA,gBAGHL,OAAA,CAACT,KAAK;MAACe,IAAI,EAAC,GAAG;MAACC,SAAS,EAAEZ;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpCX,OAAA,CAACT,KAAK;MAACe,IAAI,EAAC,WAAW;MAACC,SAAS,EAAEX;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG/CX,OAAA,CAACN,cAAc;MAACY,IAAI,EAAC,YAAY;MAACC,SAAS,EAAEV;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1DX,OAAA,CAACN,cAAc;MAACY,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAET;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGvB,eAEpC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb;AAACT,EAAA,CApBQD,GAAG;EAAA,QAEOT,WAAW;AAAA;AAAAoB,EAAA,GAFrBX,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}