{"ast":null,"code":"// // import React, { useState, useEffect } from 'react';\n// // import axios from 'axios';\n\n// // const Dashboard = () => {\n// //   const [role, setRole] = useState(null);\n// //   const [userInfo, setUserInfo] = useState({});\n// //   const [loading, setLoading] = useState(true);\n// //   const [allUsers, setAllUsers] = useState([]); // State to store fetched users\n// //   const [fetchingUsers, setFetchingUsers] = useState(false); // Loading state for fetching users\n// //   const [error, setError] = useState(null); // State to handle errors\n\n// //   useEffect(() => {\n// //     const fetchUserInfo = async () => {\n// //       const token = localStorage.getItem('token');\n\n// //       if (!token) {\n// //         console.log('No token found, redirecting to login');\n// //         window.location.href = '/'; // Redirect if no token is found\n// //         return;\n// //       }\n\n// //       try {\n// //         const response = await axios.get('http://localhost:4000/api/users/profile', {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n\n// //         // Set user info and role once the API call is successful\n// //         setUserInfo(response.data);\n// //         setRole(response.data.role); // Set the role from the response\n// //         setLoading(false); // Stop loading once data is fetched\n// //       } catch (err) {\n// //         console.error('Error fetching user data:', err);\n// //         window.location.href = '/'; // Redirect if there's an error\n// //       }\n// //     };\n\n// //     fetchUserInfo();\n// //   }, []);\n\n// //   // Function to fetch all users for admin role\n// //   const fetchAllUsers = async () => {\n// //     const token = localStorage.getItem('token');\n\n// //     if (!token) {\n// //       console.log('No token found, redirecting to login');\n// //       window.location.href = '/'; // Redirect if no token is found\n// //       return;\n// //     }\n\n// //     setFetchingUsers(true); // Set loading state for fetching users\n\n// //     try {\n// //       const response = await axios.get('http://localhost:4000/api/users/admin', {\n// //         headers: { Authorization: `Bearer ${token}` },\n// //       });\n\n// //       setAllUsers(response.data); // Set the fetched users\n// //       setFetchingUsers(false); // Stop loading\n// //     } catch (err) {\n// //       console.error('Error fetching all users:', err);\n// //       setError('Error fetching users. Please try again.');\n// //       setFetchingUsers(false); // Stop loading on error\n// //     }\n// //   };\n\n// //   if (loading) {\n// //     return <div>Loading...</div>; // Display loading state while fetching user data\n// //   }\n\n// //   return (\n// //     <div>\n// //       <h1>Dashboard</h1>\n\n// //       {role === 'admin' && (\n// //         <div>\n// //           <h2>Admin Actions</h2>\n// //           <button onClick={fetchAllUsers} disabled={fetchingUsers}>\n// //             {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\n// //           </button>\n\n// //           {error && <p style={{ color: 'red' }}>{error}</p>}\n\n// //           <div>\n// //             <h3>All Users:</h3>\n// //             {allUsers.length === 0 ? (\n// //               <p>No users found.</p>\n// //             ) : (\n// //               <ul>\n// //                 {allUsers.map((user) => (\n// //                   <li key={user._id}>\n// //                     {user.name} ({user.email})\n// //                   </li>\n// //                 ))}\n// //               </ul>\n// //             )}\n// //           </div>\n// //         </div>\n// //       )}\n\n// //       {role === 'user' && (\n// //         <div>\n// //           <h2>Your Profile</h2>\n// //           <p>Name: {userInfo.name}</p>\n// //           <p>Email: {userInfo.email}</p>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default Dashboard;\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css'; // Importing a CSS file for styling\n\n// const Dashboard = () => {\n//   const [role, setRole] = useState(null);\n//   const [userInfo, setUserInfo] = useState({});\n//   const [loading, setLoading] = useState(true);\n//   const [allUsers, setAllUsers] = useState([]); // State to store fetched users\n//   const [fetchingUsers, setFetchingUsers] = useState(false); // Loading state for fetching users\n//   const [error, setError] = useState(null); // State to handle errors\n\n//   useEffect(() => {\n//     const fetchUserInfo = async () => {\n//       const token = localStorage.getItem('token');\n\n//       if (!token) {\n//         console.log('No token found, redirecting to login');\n//         window.location.href = '/'; // Redirect if no token is found\n//         return;\n//       }\n\n//       try {\n//         const response = await axios.get('http://localhost:4000/api/users/profile', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n\n//         // Set user info and role once the API call is successful\n//         setUserInfo(response.data);\n//         setRole(response.data.role); // Set the role from the response\n//         setLoading(false); // Stop loading once data is fetched\n//       } catch (err) {\n//         console.error('Error fetching user data:', err);\n//         window.location.href = '/'; // Redirect if there's an error\n//       }\n//     };\n\n//     fetchUserInfo();\n//   }, []);\n\n//   // Function to fetch all users for admin role\n//   const fetchAllUsers = async () => {\n//     const token = localStorage.getItem('token');\n\n//     if (!token) {\n//       console.log('No token found, redirecting to login');\n//       window.location.href = '/'; // Redirect if no token is found\n//       return;\n//     }\n\n//     setFetchingUsers(true); // Set loading state for fetching users\n\n//     try {\n//       const response = await axios.get('http://localhost:4000/api/users/admin', {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       setAllUsers(response.data); // Set the fetched users\n//       setFetchingUsers(false); // Stop loading\n//     } catch (err) {\n//       console.error('Error fetching all users:', err);\n//       setError('Error fetching users. Please try again.');\n//       setFetchingUsers(false); // Stop loading on error\n//     }\n//   };\n\n//   if (loading) {\n//     return <div className=\"loading\">Loading...</div>; // Display loading state while fetching user data\n//   }\n\n//   return (\n//     <div className=\"dashboard-container\">\n//       <h1 className=\"dashboard-title\">Welcome to Your Dashboard</h1>\n\n//       {role === 'admin' && (\n//         <div className=\"card\">\n//           <h2 className=\"card-title\">Admin Actions</h2>\n//           <button className=\"button\" onClick={fetchAllUsers} disabled={fetchingUsers}>\n//             {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\n//           </button>\n\n//           {error && <p className=\"error-message\">{error}</p>}\n\n//           <div>\n//             <h3>All Users:</h3>\n//             {allUsers.length === 0 ? (\n//               <p>No users found.</p>\n//             ) : (\n//               <ul className=\"user-list\">\n//                 {allUsers.map((user) => (\n//                   <li key={user._id} className=\"user-item\">\n//                     {user.name} ({user.email})\n//                   </li>\n//                 ))}\n//               </ul>\n//             )}\n//           </div>\n//         </div>\n//       )}\n\n//       {role === 'user' && (\n//         <div className=\"card\">\n//           <h2 className=\"card-title\">Your Profile</h2>\n//           <p><strong>Name:</strong> {userInfo.name}</p>\n//           <p><strong>Email:</strong> {userInfo.email}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["C:/Users/Dell/Desktop/Authentication-Task/frontsidee/src/components/Dashboard.js"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\r\n// // import axios from 'axios';\r\n\r\n// // const Dashboard = () => {\r\n// //   const [role, setRole] = useState(null);\r\n// //   const [userInfo, setUserInfo] = useState({});\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [allUsers, setAllUsers] = useState([]); // State to store fetched users\r\n// //   const [fetchingUsers, setFetchingUsers] = useState(false); // Loading state for fetching users\r\n// //   const [error, setError] = useState(null); // State to handle errors\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchUserInfo = async () => {\r\n// //       const token = localStorage.getItem('token');\r\n\r\n// //       if (!token) {\r\n// //         console.log('No token found, redirecting to login');\r\n// //         window.location.href = '/'; // Redirect if no token is found\r\n// //         return;\r\n// //       }\r\n\r\n// //       try {\r\n// //         const response = await axios.get('http://localhost:4000/api/users/profile', {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n\r\n// //         // Set user info and role once the API call is successful\r\n// //         setUserInfo(response.data);\r\n// //         setRole(response.data.role); // Set the role from the response\r\n// //         setLoading(false); // Stop loading once data is fetched\r\n// //       } catch (err) {\r\n// //         console.error('Error fetching user data:', err);\r\n// //         window.location.href = '/'; // Redirect if there's an error\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchUserInfo();\r\n// //   }, []);\r\n\r\n// //   // Function to fetch all users for admin role\r\n// //   const fetchAllUsers = async () => {\r\n// //     const token = localStorage.getItem('token');\r\n\r\n// //     if (!token) {\r\n// //       console.log('No token found, redirecting to login');\r\n// //       window.location.href = '/'; // Redirect if no token is found\r\n// //       return;\r\n// //     }\r\n\r\n// //     setFetchingUsers(true); // Set loading state for fetching users\r\n\r\n// //     try {\r\n// //       const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n// //         headers: { Authorization: `Bearer ${token}` },\r\n// //       });\r\n\r\n// //       setAllUsers(response.data); // Set the fetched users\r\n// //       setFetchingUsers(false); // Stop loading\r\n// //     } catch (err) {\r\n// //       console.error('Error fetching all users:', err);\r\n// //       setError('Error fetching users. Please try again.');\r\n// //       setFetchingUsers(false); // Stop loading on error\r\n// //     }\r\n// //   };\r\n\r\n// //   if (loading) {\r\n// //     return <div>Loading...</div>; // Display loading state while fetching user data\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h1>Dashboard</h1>\r\n      \r\n\r\n// //       {role === 'admin' && (\r\n// //         <div>\r\n// //           <h2>Admin Actions</h2>\r\n// //           <button onClick={fetchAllUsers} disabled={fetchingUsers}>\r\n// //             {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\r\n// //           </button>\r\n          \r\n// //           {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n// //           <div>\r\n// //             <h3>All Users:</h3>\r\n// //             {allUsers.length === 0 ? (\r\n// //               <p>No users found.</p>\r\n// //             ) : (\r\n// //               <ul>\r\n// //                 {allUsers.map((user) => (\r\n// //                   <li key={user._id}>\r\n// //                     {user.name} ({user.email})\r\n// //                   </li>\r\n// //                 ))}\r\n// //               </ul>\r\n// //             )}\r\n// //           </div>\r\n// //         </div>\r\n// //       )}\r\n\r\n// //       {role === 'user' && (\r\n// //         <div>\r\n// //           <h2>Your Profile</h2>\r\n// //           <p>Name: {userInfo.name}</p>\r\n// //           <p>Email: {userInfo.email}</p>\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Dashboard;\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import './Dashboard.css'; // Importing a CSS file for styling\r\n\r\n// const Dashboard = () => {\r\n//   const [role, setRole] = useState(null);\r\n//   const [userInfo, setUserInfo] = useState({});\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [allUsers, setAllUsers] = useState([]); // State to store fetched users\r\n//   const [fetchingUsers, setFetchingUsers] = useState(false); // Loading state for fetching users\r\n//   const [error, setError] = useState(null); // State to handle errors\r\n\r\n//   useEffect(() => {\r\n//     const fetchUserInfo = async () => {\r\n//       const token = localStorage.getItem('token');\r\n\r\n//       if (!token) {\r\n//         console.log('No token found, redirecting to login');\r\n//         window.location.href = '/'; // Redirect if no token is found\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         const response = await axios.get('http://localhost:4000/api/users/profile', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n\r\n//         // Set user info and role once the API call is successful\r\n//         setUserInfo(response.data);\r\n//         setRole(response.data.role); // Set the role from the response\r\n//         setLoading(false); // Stop loading once data is fetched\r\n//       } catch (err) {\r\n//         console.error('Error fetching user data:', err);\r\n//         window.location.href = '/'; // Redirect if there's an error\r\n//       }\r\n//     };\r\n\r\n//     fetchUserInfo();\r\n//   }, []);\r\n\r\n//   // Function to fetch all users for admin role\r\n//   const fetchAllUsers = async () => {\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     if (!token) {\r\n//       console.log('No token found, redirecting to login');\r\n//       window.location.href = '/'; // Redirect if no token is found\r\n//       return;\r\n//     }\r\n\r\n//     setFetchingUsers(true); // Set loading state for fetching users\r\n\r\n//     try {\r\n//       const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n\r\n//       setAllUsers(response.data); // Set the fetched users\r\n//       setFetchingUsers(false); // Stop loading\r\n//     } catch (err) {\r\n//       console.error('Error fetching all users:', err);\r\n//       setError('Error fetching users. Please try again.');\r\n//       setFetchingUsers(false); // Stop loading on error\r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div className=\"loading\">Loading...</div>; // Display loading state while fetching user data\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"dashboard-container\">\r\n//       <h1 className=\"dashboard-title\">Welcome to Your Dashboard</h1>\r\n\r\n//       {role === 'admin' && (\r\n//         <div className=\"card\">\r\n//           <h2 className=\"card-title\">Admin Actions</h2>\r\n//           <button className=\"button\" onClick={fetchAllUsers} disabled={fetchingUsers}>\r\n//             {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\r\n//           </button>\r\n\r\n//           {error && <p className=\"error-message\">{error}</p>}\r\n\r\n//           <div>\r\n//             <h3>All Users:</h3>\r\n//             {allUsers.length === 0 ? (\r\n//               <p>No users found.</p>\r\n//             ) : (\r\n//               <ul className=\"user-list\">\r\n//                 {allUsers.map((user) => (\r\n//                   <li key={user._id} className=\"user-item\">\r\n//                     {user.name} ({user.email})\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {role === 'user' && (\r\n//         <div className=\"card\">\r\n//           <h2 className=\"card-title\">Your Profile</h2>\r\n//           <p><strong>Name:</strong> {userInfo.name}</p>\r\n//           <p><strong>Email:</strong> {userInfo.email}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}