{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Authentication-Task\\\\frontsidee\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport jwt_decode from 'jwt-decode'; // Import the jwt-decode library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [userInfo, setUserInfo] = useState({\n    email: '',\n    name: ''\n  });\n  useEffect(() => {\n    // Get token from localStorage\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        // Decode the token\n        const decodedToken = jwt_decode(token);\n        // Assuming the token contains 'email' and 'name' properties\n        setUserInfo({\n          email: decodedToken.email,\n          name: decodedToken.name\n        });\n      } catch (error) {\n        console.error('Error decoding token:', error);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Welcome, \", userInfo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Email: \", userInfo.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Here you can view and manage your account details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"MKAFmyRsXDuY3gD2QweU+ETvWPU=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","jwt_decode","jsxDEV","_jsxDEV","Profile","_s","userInfo","setUserInfo","email","name","token","localStorage","getItem","decodedToken","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Authentication-Task/frontsidee/src/components/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport jwt_decode from 'jwt-decode';  // Import the jwt-decode library\r\n\r\nconst Profile = () => {\r\n  const [userInfo, setUserInfo] = useState({ email: '', name: '' });\r\n\r\n  useEffect(() => {\r\n    // Get token from localStorage\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (token) {\r\n      try {\r\n        // Decode the token\r\n        const decodedToken = jwt_decode(token);\r\n        // Assuming the token contains 'email' and 'name' properties\r\n        setUserInfo({\r\n          email: decodedToken.email,\r\n          name: decodedToken.name\r\n        });\r\n      } catch (error) {\r\n        console.error('Error decoding token:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <ul>\r\n          <li>Welcome, {userInfo.name}</li> {/* Displaying the user's name */}\r\n          <li>Email: {userInfo.email}</li>  {/* Displaying the user's email */}\r\n        </ul>\r\n      </nav>\r\n\r\n      <h1>Your Profile</h1>\r\n      <p>Here you can view and manage your account details.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,YAAY,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAEjEV,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,KAAK,EAAE;MACT,IAAI;QACF;QACA,MAAMG,YAAY,GAAGZ,UAAU,CAACS,KAAK,CAAC;QACtC;QACAH,WAAW,CAAC;UACVC,KAAK,EAAEK,YAAY,CAACL,KAAK;UACzBC,IAAI,EAAEI,YAAY,CAACJ;QACrB,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,GAAI,WAAS,EAACV,QAAQ,CAACG,IAAI;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,KAAC,eAClCjB,OAAA;UAAAa,QAAA,GAAI,SAAO,EAACV,QAAQ,CAACE,KAAK;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,MAAE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENjB,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBjB,OAAA;MAAAa,QAAA,EAAG;IAAkD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACf,EAAA,CAnCID,OAAO;AAAAiB,EAAA,GAAPjB,OAAO;AAqCb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}