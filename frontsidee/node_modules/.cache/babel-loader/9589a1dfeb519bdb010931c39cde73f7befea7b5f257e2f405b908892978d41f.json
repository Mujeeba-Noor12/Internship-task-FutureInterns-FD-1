{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Authentication-Task\\\\frontsidee\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// // import React, { useState, useEffect } from 'react';\n// // import axios from 'axios';\n\n// // const Dashboard = () => {\n// //   const [role, setRole] = useState(null);\n// //   const [userInfo, setUserInfo] = useState({});\n// //   const [loading, setLoading] = useState(true);\n// //   const [allUsers, setAllUsers] = useState([]); // State to store fetched users\n// //   const [fetchingUsers, setFetchingUsers] = useState(false); // Loading state for fetching users\n// //   const [error, setError] = useState(null); // State to handle errors\n\n// //   useEffect(() => {\n// //     const fetchUserInfo = async () => {\n// //       const token = localStorage.getItem('token');\n\n// //       if (!token) {\n// //         console.log('No token found, redirecting to login');\n// //         window.location.href = '/'; // Redirect if no token is found\n// //         return;\n// //       }\n\n// //       try {\n// //         const response = await axios.get('http://localhost:4000/api/users/profile', {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n\n// //         // Set user info and role once the API call is successful\n// //         setUserInfo(response.data);\n// //         setRole(response.data.role); // Set the role from the response\n// //         setLoading(false); // Stop loading once data is fetched\n// //       } catch (err) {\n// //         console.error('Error fetching user data:', err);\n// //         window.location.href = '/'; // Redirect if there's an error\n// //       }\n// //     };\n\n// //     fetchUserInfo();\n// //   }, []);\n\n// //   // Function to fetch all users for admin role\n// //   const fetchAllUsers = async () => {\n// //     const token = localStorage.getItem('token');\n\n// //     if (!token) {\n// //       console.log('No token found, redirecting to login');\n// //       window.location.href = '/'; // Redirect if no token is found\n// //       return;\n// //     }\n\n// //     setFetchingUsers(true); // Set loading state for fetching users\n\n// //     try {\n// //       const response = await axios.get('http://localhost:4000/api/users/admin', {\n// //         headers: { Authorization: `Bearer ${token}` },\n// //       });\n\n// //       setAllUsers(response.data); // Set the fetched users\n// //       setFetchingUsers(false); // Stop loading\n// //     } catch (err) {\n// //       console.error('Error fetching all users:', err);\n// //       setError('Error fetching users. Please try again.');\n// //       setFetchingUsers(false); // Stop loading on error\n// //     }\n// //   };\n\n// //   if (loading) {\n// //     return <div>Loading...</div>; // Display loading state while fetching user data\n// //   }\n\n// //   return (\n// //     <div>\n// //       <h1>Dashboard</h1>\n\n// //       {role === 'admin' && (\n// //         <div>\n// //           <h2>Admin Actions</h2>\n// //           <button onClick={fetchAllUsers} disabled={fetchingUsers}>\n// //             {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\n// //           </button>\n\n// //           {error && <p style={{ color: 'red' }}>{error}</p>}\n\n// //           <div>\n// //             <h3>All Users:</h3>\n// //             {allUsers.length === 0 ? (\n// //               <p>No users found.</p>\n// //             ) : (\n// //               <ul>\n// //                 {allUsers.map((user) => (\n// //                   <li key={user._id}>\n// //                     {user.name} ({user.email})\n// //                   </li>\n// //                 ))}\n// //               </ul>\n// //             )}\n// //           </div>\n// //         </div>\n// //       )}\n\n// //       {role === 'user' && (\n// //         <div>\n// //           <h2>Your Profile</h2>\n// //           <p>Name: {userInfo.name}</p>\n// //           <p>Email: {userInfo.email}</p>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default Dashboard;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n\n// const Dashboard = () => {\n//   const [role, setRole] = useState(null);\n//   const [userInfo, setUserInfo] = useState({});\n//   const [loading, setLoading] = useState(true);\n//   const [allUsers, setAllUsers] = useState([]);\n//   const [fetchingUsers, setFetchingUsers] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchUserInfo = async () => {\n//       const token = localStorage.getItem('token');\n\n//       if (!token) {\n//         console.log('No token found, redirecting to login');\n//         window.location.href = '/';\n//         return;\n//       }\n\n//       try {\n//         const response = await axios.get('http://localhost:4000/api/users/profile', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n\n//         setUserInfo(response.data);\n//         setRole(response.data.role);\n//         setLoading(false);\n//       } catch (err) {\n//         console.error('Error fetching user data:', err);\n//         window.location.href = '/';\n//       }\n//     };\n\n//     fetchUserInfo();\n//   }, []);\n\n//   const fetchAllUsers = async () => {\n//     const token = localStorage.getItem('token');\n\n//     if (!token) {\n//       console.log('No token found, redirecting to login');\n//       window.location.href = '/';\n//       return;\n//     }\n\n//     setFetchingUsers(true);\n\n//     try {\n//       const response = await axios.get('http://localhost:4000/api/users/admin', {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       setAllUsers(response.data);\n//       setFetchingUsers(false);\n//     } catch (err) {\n//       console.error('Error fetching all users:', err);\n//       setError('Error fetching users. Please try again.');\n//       setFetchingUsers(false);\n//     }\n//   };\n\n//   if (loading) {\n//     return <div className=\"loading\">Loading...</div>;\n//   }\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* Sidebar */}\n//       <aside className=\"sidebar\">\n//         <h1>Admin Panel</h1>\n//         <ul>\n//           <li className=\"active\">Dashboard</li>\n//           <li>Users</li>\n//           <li>Projects</li>\n//           <li>Settings</li>\n//         </ul>\n//       </aside>\n\n//       {/* Main Content */}\n//       <main className=\"content\">\n//         <header>\n//           <h2>Dashboard</h2>\n//         </header>\n\n//         {role === 'admin' && (\n//           <div className=\"admin-section\">\n//             <h3>Admin Actions</h3>\n//             <button className=\"btn-fetch\" onClick={fetchAllUsers} disabled={fetchingUsers}>\n//               {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\n//             </button>\n//             {error && <p className=\"error\">{error}</p>}\n\n//             <div className=\"users-list\">\n//               <h3>All Users:</h3>\n//               {allUsers.length === 0 ? (\n//                 <p>No users found.</p>\n//               ) : (\n//                 <table>\n//                   <thead>\n//                     <tr>\n//                       <th>Name</th>\n//                       <th>Email</th>\n//                       <th>Actions</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {allUsers.map((user) => (\n//                       <tr key={user._id}>\n//                         <td>{user.fullname}</td>\n//                         <td>{user.email}</td>\n//                         <td>\n//                           <button className=\"btn-profile\">See Profile</button>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                 </table>\n//               )}\n//             </div>\n//           </div>\n//         )}\n\n//         {role === 'user' && (\n//           <div className=\"profile-section\">\n//             <h3>Your Profile</h3>\n//             <p>Name: {userInfo.name}</p>\n//             <p>Email: {userInfo.email}</p>\n//           </div>\n//         )}\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [role, setRole] = useState(null);\n  const [userInfo, setUserInfo] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [allUsers, setAllUsers] = useState([]);\n  const [fetchingUsers, setFetchingUsers] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1); // State for current page\n  const usersPerPage = 8; // Number of users per page\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.log('No token found, redirecting to login');\n        window.location.href = '/';\n        return;\n      }\n      try {\n        const response = await axios.get('http://localhost:4000/api/users/profile', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUserInfo(response.data);\n        setRole(response.data.role);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching user data:', err);\n        window.location.href = '/';\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  const fetchAllUsers = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.log('No token found, redirecting to login');\n      window.location.href = '/';\n      return;\n    }\n    setFetchingUsers(true);\n    try {\n      const response = await axios.get('http://localhost:4000/api/users/admin', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAllUsers(response.data);\n      setFetchingUsers(false);\n    } catch (err) {\n      console.error('Error fetching all users:', err);\n      setError('Error fetching users. Please try again.');\n      setFetchingUsers(false);\n    }\n  };\n\n  // Pagination Logic\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = allUsers.slice(indexOfFirstUser, indexOfLastUser);\n  const handleNextPage = () => {\n    if (currentPage < Math.ceil(allUsers.length / usersPerPage)) {\n      setCurrentPage(prevPage => prevPage + 1);\n    }\n  };\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(prevPage => prevPage - 1);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"active\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), role === 'admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Admin Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-fetch\",\n          onClick: fetchAllUsers,\n          disabled: fetchingUsers,\n          children: fetchingUsers ? 'Loading users...' : 'Fetch All Users'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"All Users:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), currentUsers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No users found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: currentUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.fullname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-profile\",\n                    children: \"See Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 25\n                }, this)]\n              }, user._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this), allUsers.length > usersPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePreviousPage,\n              disabled: currentPage === 1,\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Page \", currentPage, \" of \", Math.ceil(allUsers.length / usersPerPage)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextPage,\n              disabled: currentPage === Math.ceil(allUsers.length / usersPerPage),\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), role === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", userInfo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", userInfo.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"2V3uLY8CZsco4inCxhcOToUnP9E=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","role","setRole","userInfo","setUserInfo","loading","setLoading","allUsers","setAllUsers","fetchingUsers","setFetchingUsers","error","setError","currentPage","setCurrentPage","usersPerPage","fetchUserInfo","token","localStorage","getItem","console","log","window","location","href","response","get","headers","Authorization","data","err","fetchAllUsers","indexOfLastUser","indexOfFirstUser","currentUsers","slice","handleNextPage","Math","ceil","length","prevPage","handlePreviousPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","user","fullname","email","_id","name","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Authentication-Task/frontsidee/src/components/Dashboard.js"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\r\n// // import axios from 'axios';\r\n\r\n// // const Dashboard = () => {\r\n// //   const [role, setRole] = useState(null);\r\n// //   const [userInfo, setUserInfo] = useState({});\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [allUsers, setAllUsers] = useState([]); // State to store fetched users\r\n// //   const [fetchingUsers, setFetchingUsers] = useState(false); // Loading state for fetching users\r\n// //   const [error, setError] = useState(null); // State to handle errors\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchUserInfo = async () => {\r\n// //       const token = localStorage.getItem('token');\r\n\r\n// //       if (!token) {\r\n// //         console.log('No token found, redirecting to login');\r\n// //         window.location.href = '/'; // Redirect if no token is found\r\n// //         return;\r\n// //       }\r\n\r\n// //       try {\r\n// //         const response = await axios.get('http://localhost:4000/api/users/profile', {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n\r\n// //         // Set user info and role once the API call is successful\r\n// //         setUserInfo(response.data);\r\n// //         setRole(response.data.role); // Set the role from the response\r\n// //         setLoading(false); // Stop loading once data is fetched\r\n// //       } catch (err) {\r\n// //         console.error('Error fetching user data:', err);\r\n// //         window.location.href = '/'; // Redirect if there's an error\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchUserInfo();\r\n// //   }, []);\r\n\r\n// //   // Function to fetch all users for admin role\r\n// //   const fetchAllUsers = async () => {\r\n// //     const token = localStorage.getItem('token');\r\n\r\n// //     if (!token) {\r\n// //       console.log('No token found, redirecting to login');\r\n// //       window.location.href = '/'; // Redirect if no token is found\r\n// //       return;\r\n// //     }\r\n\r\n// //     setFetchingUsers(true); // Set loading state for fetching users\r\n\r\n// //     try {\r\n// //       const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n// //         headers: { Authorization: `Bearer ${token}` },\r\n// //       });\r\n\r\n// //       setAllUsers(response.data); // Set the fetched users\r\n// //       setFetchingUsers(false); // Stop loading\r\n// //     } catch (err) {\r\n// //       console.error('Error fetching all users:', err);\r\n// //       setError('Error fetching users. Please try again.');\r\n// //       setFetchingUsers(false); // Stop loading on error\r\n// //     }\r\n// //   };\r\n\r\n// //   if (loading) {\r\n// //     return <div>Loading...</div>; // Display loading state while fetching user data\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h1>Dashboard</h1>\r\n      \r\n\r\n// //       {role === 'admin' && (\r\n// //         <div>\r\n// //           <h2>Admin Actions</h2>\r\n// //           <button onClick={fetchAllUsers} disabled={fetchingUsers}>\r\n// //             {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\r\n// //           </button>\r\n          \r\n// //           {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n// //           <div>\r\n// //             <h3>All Users:</h3>\r\n// //             {allUsers.length === 0 ? (\r\n// //               <p>No users found.</p>\r\n// //             ) : (\r\n// //               <ul>\r\n// //                 {allUsers.map((user) => (\r\n// //                   <li key={user._id}>\r\n// //                     {user.name} ({user.email})\r\n// //                   </li>\r\n// //                 ))}\r\n// //               </ul>\r\n// //             )}\r\n// //           </div>\r\n// //         </div>\r\n// //       )}\r\n\r\n// //       {role === 'user' && (\r\n// //         <div>\r\n// //           <h2>Your Profile</h2>\r\n// //           <p>Name: {userInfo.name}</p>\r\n// //           <p>Email: {userInfo.email}</p>\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Dashboard;\r\n\r\n        \r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import './Dashboard.css';\r\n\r\n// const Dashboard = () => {\r\n//   const [role, setRole] = useState(null);\r\n//   const [userInfo, setUserInfo] = useState({});\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [allUsers, setAllUsers] = useState([]);\r\n//   const [fetchingUsers, setFetchingUsers] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUserInfo = async () => {\r\n//       const token = localStorage.getItem('token');\r\n\r\n//       if (!token) {\r\n//         console.log('No token found, redirecting to login');\r\n//         window.location.href = '/';\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         const response = await axios.get('http://localhost:4000/api/users/profile', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n\r\n//         setUserInfo(response.data);\r\n//         setRole(response.data.role);\r\n//         setLoading(false);\r\n//       } catch (err) {\r\n//         console.error('Error fetching user data:', err);\r\n//         window.location.href = '/';\r\n//       }\r\n//     };\r\n\r\n//     fetchUserInfo();\r\n//   }, []);\r\n\r\n//   const fetchAllUsers = async () => {\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     if (!token) {\r\n//       console.log('No token found, redirecting to login');\r\n//       window.location.href = '/';\r\n//       return;\r\n//     }\r\n\r\n//     setFetchingUsers(true);\r\n\r\n//     try {\r\n//       const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n\r\n//       setAllUsers(response.data);\r\n//       setFetchingUsers(false);\r\n//     } catch (err) {\r\n//       console.error('Error fetching all users:', err);\r\n//       setError('Error fetching users. Please try again.');\r\n//       setFetchingUsers(false);\r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div className=\"loading\">Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"dashboard\">\r\n//       {/* Sidebar */}\r\n//       <aside className=\"sidebar\">\r\n//         <h1>Admin Panel</h1>\r\n//         <ul>\r\n//           <li className=\"active\">Dashboard</li>\r\n//           <li>Users</li>\r\n//           <li>Projects</li>\r\n//           <li>Settings</li>\r\n//         </ul>\r\n//       </aside>\r\n\r\n//       {/* Main Content */}\r\n//       <main className=\"content\">\r\n//         <header>\r\n//           <h2>Dashboard</h2>\r\n//         </header>\r\n\r\n//         {role === 'admin' && (\r\n//           <div className=\"admin-section\">\r\n//             <h3>Admin Actions</h3>\r\n//             <button className=\"btn-fetch\" onClick={fetchAllUsers} disabled={fetchingUsers}>\r\n//               {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\r\n//             </button>\r\n//             {error && <p className=\"error\">{error}</p>}\r\n\r\n//             <div className=\"users-list\">\r\n//               <h3>All Users:</h3>\r\n//               {allUsers.length === 0 ? (\r\n//                 <p>No users found.</p>\r\n//               ) : (\r\n//                 <table>\r\n//                   <thead>\r\n//                     <tr>\r\n//                       <th>Name</th>\r\n//                       <th>Email</th>\r\n//                       <th>Actions</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody>\r\n//                     {allUsers.map((user) => (\r\n//                       <tr key={user._id}>\r\n//                         <td>{user.fullname}</td>\r\n//                         <td>{user.email}</td>\r\n//                         <td>\r\n//                           <button className=\"btn-profile\">See Profile</button>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                 </table>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {role === 'user' && (\r\n//           <div className=\"profile-section\">\r\n//             <h3>Your Profile</h3>\r\n//             <p>Name: {userInfo.name}</p>\r\n//             <p>Email: {userInfo.email}</p>\r\n//           </div>\r\n//         )}\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [role, setRole] = useState(null);\r\n  const [userInfo, setUserInfo] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [fetchingUsers, setFetchingUsers] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1); // State for current page\r\n  const usersPerPage = 8; // Number of users per page\r\n\r\n  useEffect(() => {\r\n    const fetchUserInfo = async () => {\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!token) {\r\n        console.log('No token found, redirecting to login');\r\n        window.location.href = '/';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/api/users/profile', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        setUserInfo(response.data);\r\n        setRole(response.data.role);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching user data:', err);\r\n        window.location.href = '/';\r\n      }\r\n    };\r\n\r\n    fetchUserInfo();\r\n  }, []);\r\n\r\n  const fetchAllUsers = async () => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      console.log('No token found, redirecting to login');\r\n      window.location.href = '/';\r\n      return;\r\n    }\r\n\r\n    setFetchingUsers(true);\r\n\r\n    try {\r\n      const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      setAllUsers(response.data);\r\n      setFetchingUsers(false);\r\n    } catch (err) {\r\n      console.error('Error fetching all users:', err);\r\n      setError('Error fetching users. Please try again.');\r\n      setFetchingUsers(false);\r\n    }\r\n  };\r\n\r\n  // Pagination Logic\r\n  const indexOfLastUser = currentPage * usersPerPage;\r\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n  const currentUsers = allUsers.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n  const handleNextPage = () => {\r\n    if (currentPage < Math.ceil(allUsers.length / usersPerPage)) {\r\n      setCurrentPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage((prevPage) => prevPage - 1);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {/* Sidebar */}\r\n      <aside className=\"sidebar\">\r\n        <h1>Admin Panel</h1>\r\n        <ul>\r\n          <li className=\"active\">Dashboard</li>\r\n          <li>Users</li>\r\n          <li>Projects</li>\r\n          <li>Settings</li>\r\n        </ul>\r\n      </aside>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"content\">\r\n        <header>\r\n          <h2>Dashboard</h2>\r\n        </header>\r\n\r\n        {role === 'admin' && (\r\n          <div className=\"admin-section\">\r\n            <h3>Admin Actions</h3>\r\n            <button className=\"btn-fetch\" onClick={fetchAllUsers} disabled={fetchingUsers}>\r\n              {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\r\n            </button>\r\n            {error && <p className=\"error\">{error}</p>}\r\n\r\n            <div className=\"users-list\">\r\n              <h3>All Users:</h3>\r\n              {currentUsers.length === 0 ? (\r\n                <p>No users found.</p>\r\n              ) : (\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Name</th>\r\n                      <th>Email</th>\r\n                      \r\n                      <th>Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {currentUsers.map((user) => (\r\n                      <tr key={user._id}>\r\n                        <td>{user.fullname}</td>\r\n                        <td>{user.email}</td>\r\n                    \r\n                        <td>\r\n                          <button className=\"btn-profile\">See Profile</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              )}\r\n\r\n              {/* Pagination Controls */}\r\n              {allUsers.length > usersPerPage && (\r\n                <div className=\"pagination\">\r\n                  <button onClick={handlePreviousPage} disabled={currentPage === 1}>\r\n                    Previous\r\n                  </button>\r\n                  <span>\r\n                    Page {currentPage} of {Math.ceil(allUsers.length / usersPerPage)}\r\n                  </span>\r\n                  <button\r\n                    onClick={handleNextPage}\r\n                    disabled={currentPage === Math.ceil(allUsers.length / usersPerPage)}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {role === 'user' && (\r\n          <div className=\"profile-section\">\r\n            <h3>Your Profile</h3>\r\n            <p>Name: {userInfo.name}</p>\r\n            <p>Email: {userInfo.email}</p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}