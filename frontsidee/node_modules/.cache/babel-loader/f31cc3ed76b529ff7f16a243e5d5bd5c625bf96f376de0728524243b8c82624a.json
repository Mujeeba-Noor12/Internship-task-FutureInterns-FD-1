{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Authentication-Task\\\\frontsidee\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Dashboard = () => {\n//   const [role, setRole] = useState(null);\n//   const [userInfo, setUserInfo] = useState({});\n//   const [loading, setLoading] = useState(true);\n//   const [allUsers, setAllUsers] = useState([]); // State to store fetched users\n//   const [fetchingUsers, setFetchingUsers] = useState(false); // Loading state for fetching users\n//   const [error, setError] = useState(null); // State to handle errors\n\n//   useEffect(() => {\n//     const fetchUserInfo = async () => {\n//       const token = localStorage.getItem('token');\n\n//       if (!token) {\n//         console.log('No token found, redirecting to login');\n//         window.location.href = '/'; // Redirect if no token is found\n//         return;\n//       }\n\n//       try {\n//         const response = await axios.get('http://localhost:4000/api/users/profile', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n\n//         // Set user info and role once the API call is successful\n//         setUserInfo(response.data);\n//         setRole(response.data.role); // Set the role from the response\n//         setLoading(false); // Stop loading once data is fetched\n//       } catch (err) {\n//         console.error('Error fetching user data:', err);\n//         window.location.href = '/'; // Redirect if there's an error\n//       }\n//     };\n\n//     fetchUserInfo();\n//   }, []);\n\n//   // Function to fetch all users for admin role\n//   const fetchAllUsers = async () => {\n//     const token = localStorage.getItem('token');\n\n//     if (!token) {\n//       console.log('No token found, redirecting to login');\n//       window.location.href = '/'; // Redirect if no token is found\n//       return;\n//     }\n\n//     setFetchingUsers(true); // Set loading state for fetching users\n\n//     try {\n//       const response = await axios.get('http://localhost:4000/api/users/admin', {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       setAllUsers(response.data); // Set the fetched users\n//       setFetchingUsers(false); // Stop loading\n//     } catch (err) {\n//       console.error('Error fetching all users:', err);\n//       setError('Error fetching users. Please try again.');\n//       setFetchingUsers(false); // Stop loading on error\n//     }\n//   };\n\n//   if (loading) {\n//     return <div>Loading...</div>; // Display loading state while fetching user data\n//   }\n\n//   return (\n//     <div>\n//       <h1>Dashboard</h1>\n\n//       {role === 'admin' && (\n//         <div>\n//           <h2>Admin Actions</h2>\n//           <button onClick={fetchAllUsers} disabled={fetchingUsers}>\n//             {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\n//           </button>\n\n//           {error && <p style={{ color: 'red' }}>{error}</p>}\n\n//           <div>\n//             <h3>All Users:</h3>\n//             {allUsers.length === 0 ? (\n//               <p>No users found.</p>\n//             ) : (\n//               <ul>\n//                 {allUsers.map((user) => (\n//                   <li key={user._id}>\n//                     {user.name} ({user.email})\n//                   </li>\n//                 ))}\n//               </ul>\n//             )}\n//           </div>\n//         </div>\n//       )}\n\n//       {role === 'user' && (\n//         <div>\n//           <h2>Your Profile</h2>\n//           <p>Name: {userInfo.name}</p>\n//           <p>Email: {userInfo.email}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css'; // Importing a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [role, setRole] = useState(null);\n  const [userInfo, setUserInfo] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [allUsers, setAllUsers] = useState([]); // State to store fetched users\n  const [fetchingUsers, setFetchingUsers] = useState(false); // Loading state for fetching users\n  const [error, setError] = useState(null); // State to handle errors\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.log('No token found, redirecting to login');\n        window.location.href = '/'; // Redirect if no token is found\n        return;\n      }\n      try {\n        const response = await axios.get('http://localhost:4000/api/users/profile', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Set user info and role once the API call is successful\n        setUserInfo(response.data);\n        setRole(response.data.role); // Set the role from the response\n        setLoading(false); // Stop loading once data is fetched\n      } catch (err) {\n        console.error('Error fetching user data:', err);\n        window.location.href = '/'; // Redirect if there's an error\n      }\n    };\n    fetchUserInfo();\n  }, []);\n\n  // Function to fetch all users for admin role\n  const fetchAllUsers = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.log('No token found, redirecting to login');\n      window.location.href = '/'; // Redirect if no token is found\n      return;\n    }\n    setFetchingUsers(true); // Set loading state for fetching users\n\n    try {\n      const response = await axios.get('http://localhost:4000/api/users/admin', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAllUsers(response.data); // Set the fetched users\n      setFetchingUsers(false); // Stop loading\n    } catch (err) {\n      console.error('Error fetching all users:', err);\n      setError('Error fetching users. Please try again.');\n      setFetchingUsers(false); // Stop loading on error\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 12\n    }, this); // Display loading state while fetching user data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-title\",\n      children: \"Welcome to Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), role === 'admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"Admin Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: fetchAllUsers,\n        disabled: fetchingUsers,\n        children: fetchingUsers ? 'Loading users...' : 'Fetch All Users'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"All Users:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), allUsers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No users found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"user-list\",\n          children: allUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"user-item\",\n            children: [user.name, \" (\", user.email, \")\"]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), role === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"Your Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 14\n        }, this), \" \", userInfo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 14\n        }, this), \" \", userInfo.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"GQU4ayG39njtNFX5avfNZ3ktogE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","role","setRole","userInfo","setUserInfo","loading","setLoading","allUsers","setAllUsers","fetchingUsers","setFetchingUsers","error","setError","fetchUserInfo","token","localStorage","getItem","console","log","window","location","href","response","get","headers","Authorization","data","err","fetchAllUsers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","map","user","name","email","_id","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Authentication-Task/frontsidee/src/components/Dashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Dashboard = () => {\r\n//   const [role, setRole] = useState(null);\r\n//   const [userInfo, setUserInfo] = useState({});\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [allUsers, setAllUsers] = useState([]); // State to store fetched users\r\n//   const [fetchingUsers, setFetchingUsers] = useState(false); // Loading state for fetching users\r\n//   const [error, setError] = useState(null); // State to handle errors\r\n\r\n//   useEffect(() => {\r\n//     const fetchUserInfo = async () => {\r\n//       const token = localStorage.getItem('token');\r\n\r\n//       if (!token) {\r\n//         console.log('No token found, redirecting to login');\r\n//         window.location.href = '/'; // Redirect if no token is found\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         const response = await axios.get('http://localhost:4000/api/users/profile', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n\r\n//         // Set user info and role once the API call is successful\r\n//         setUserInfo(response.data);\r\n//         setRole(response.data.role); // Set the role from the response\r\n//         setLoading(false); // Stop loading once data is fetched\r\n//       } catch (err) {\r\n//         console.error('Error fetching user data:', err);\r\n//         window.location.href = '/'; // Redirect if there's an error\r\n//       }\r\n//     };\r\n\r\n//     fetchUserInfo();\r\n//   }, []);\r\n\r\n//   // Function to fetch all users for admin role\r\n//   const fetchAllUsers = async () => {\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     if (!token) {\r\n//       console.log('No token found, redirecting to login');\r\n//       window.location.href = '/'; // Redirect if no token is found\r\n//       return;\r\n//     }\r\n\r\n//     setFetchingUsers(true); // Set loading state for fetching users\r\n\r\n//     try {\r\n//       const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n\r\n//       setAllUsers(response.data); // Set the fetched users\r\n//       setFetchingUsers(false); // Stop loading\r\n//     } catch (err) {\r\n//       console.error('Error fetching all users:', err);\r\n//       setError('Error fetching users. Please try again.');\r\n//       setFetchingUsers(false); // Stop loading on error\r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>; // Display loading state while fetching user data\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Dashboard</h1>\r\n      \r\n\r\n//       {role === 'admin' && (\r\n//         <div>\r\n//           <h2>Admin Actions</h2>\r\n//           <button onClick={fetchAllUsers} disabled={fetchingUsers}>\r\n//             {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\r\n//           </button>\r\n          \r\n//           {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n//           <div>\r\n//             <h3>All Users:</h3>\r\n//             {allUsers.length === 0 ? (\r\n//               <p>No users found.</p>\r\n//             ) : (\r\n//               <ul>\r\n//                 {allUsers.map((user) => (\r\n//                   <li key={user._id}>\r\n//                     {user.name} ({user.email})\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {role === 'user' && (\r\n//         <div>\r\n//           <h2>Your Profile</h2>\r\n//           <p>Name: {userInfo.name}</p>\r\n//           <p>Email: {userInfo.email}</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Dashboard.css'; // Importing a CSS file for styling\r\n\r\nconst Dashboard = () => {\r\n  const [role, setRole] = useState(null);\r\n  const [userInfo, setUserInfo] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [allUsers, setAllUsers] = useState([]); // State to store fetched users\r\n  const [fetchingUsers, setFetchingUsers] = useState(false); // Loading state for fetching users\r\n  const [error, setError] = useState(null); // State to handle errors\r\n\r\n  useEffect(() => {\r\n    const fetchUserInfo = async () => {\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!token) {\r\n        console.log('No token found, redirecting to login');\r\n        window.location.href = '/'; // Redirect if no token is found\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/api/users/profile', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        // Set user info and role once the API call is successful\r\n        setUserInfo(response.data);\r\n        setRole(response.data.role); // Set the role from the response\r\n        setLoading(false); // Stop loading once data is fetched\r\n      } catch (err) {\r\n        console.error('Error fetching user data:', err);\r\n        window.location.href = '/'; // Redirect if there's an error\r\n      }\r\n    };\r\n\r\n    fetchUserInfo();\r\n  }, []);\r\n\r\n  // Function to fetch all users for admin role\r\n  const fetchAllUsers = async () => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      console.log('No token found, redirecting to login');\r\n      window.location.href = '/'; // Redirect if no token is found\r\n      return;\r\n    }\r\n\r\n    setFetchingUsers(true); // Set loading state for fetching users\r\n\r\n    try {\r\n      const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      setAllUsers(response.data); // Set the fetched users\r\n      setFetchingUsers(false); // Stop loading\r\n    } catch (err) {\r\n      console.error('Error fetching all users:', err);\r\n      setError('Error fetching users. Please try again.');\r\n      setFetchingUsers(false); // Stop loading on error\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>; // Display loading state while fetching user data\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1 className=\"dashboard-title\">Welcome to Your Dashboard</h1>\r\n\r\n      {role === 'admin' && (\r\n        <div className=\"card\">\r\n          <h2 className=\"card-title\">Admin Actions</h2>\r\n          <button className=\"button\" onClick={fetchAllUsers} disabled={fetchingUsers}>\r\n            {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\r\n          </button>\r\n\r\n          {error && <p className=\"error-message\">{error}</p>}\r\n\r\n          <div>\r\n            <h3>All Users:</h3>\r\n            {allUsers.length === 0 ? (\r\n              <p>No users found.</p>\r\n            ) : (\r\n              <ul className=\"user-list\">\r\n                {allUsers.map((user) => (\r\n                  <li key={user._id} className=\"user-item\">\r\n                    {user.name} ({user.email})\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {role === 'user' && (\r\n        <div className=\"card\">\r\n          <h2 className=\"card-title\">Your Profile</h2>\r\n          <p><strong>Name:</strong> {userInfo.name}</p>\r\n          <p><strong>Email:</strong> {userInfo.email}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}