{"ast":null,"code":"// // // // import React, { useState, useEffect } from 'react';\n// // // // import axios from 'axios';\n// // // // import './Dashboard.css';\n\n// // // // const Dashboard = () => {\n// // // //   const [role, setRole] = useState(null);\n// // // //   const [userInfo, setUserInfo] = useState({});\n// // // //   const [loading, setLoading] = useState(true);\n// // // //   const [allUsers, setAllUsers] = useState([]);\n// // // //   const [fetchingUsers, setFetchingUsers] = useState(false);\n// // // //   const [error, setError] = useState(null);\n\n// // // //   const [currentPage, setCurrentPage] = useState(1); \n// // // //   const usersPerPage = 8; \n\n// // // //   useEffect(() => {\n// // // //     const fetchUserInfo = async () => {\n// // // //       const token = localStorage.getItem('token');\n// // // //       console.log(token)\n\n// // // //       if (!token) {\n// // // //         console.log('No token found, redirecting to login');\n// // // //         window.location.href = '/';\n// // // //         return;\n// // // //       }\n\n// // // //       try {\n// // // //         const response = await axios.get('http://localhost:4000/api/users/profile', {\n// // // //           headers: { Authorization: `Bearer ${token}` },\n// // // //         });\n\n// // // //         setUserInfo(response.data);\n// // // //         setRole(response.data.role);\n// // // //         setLoading(false);\n// // // //       } catch (err) {\n// // // //         console.error('Error fetching user data:', err);\n// // // //         window.location.href = '/';\n// // // //       }\n// // // //     };\n\n// // // //     fetchUserInfo();\n// // // //   }, []);\n\n// // // //   const fetchAllUsers = async () => {\n// // // //     const token = localStorage.getItem('token');\n// // // //     console.log('Token:', token); \n\n// // // //     if (!token) {\n// // // //       console.log('No token found, redirecting to login');\n// // // //       window.location.href = '/';\n// // // //       return;\n// // // //     }\n\n// // // //     setFetchingUsers(true);\n\n// // // //     try {\n// // // //       const response = await axios.get('http://localhost:4000/api/users/admin', {\n// // // //         headers: { Authorization: `Bearer ${token}` },\n// // // //       });\n// // // //       console.log('Fetched users:', response.data);  \n// // // //       setAllUsers(response.data);\n// // // //       setFetchingUsers(false);\n// // // //     } catch (err) {\n// // // //       console.error('Error fetching all users:', err);\n// // // //       setError(err.message);\n// // // //       setFetchingUsers(false);\n// // // //     }\n// // // //   };\n\n// // // //   const indexOfLastUser = currentPage * usersPerPage;\n// // // //   const indexOfFirstUser = indexOfLastUser - usersPerPage;\n// // // //   const currentUsers = allUsers.slice(indexOfFirstUser, indexOfLastUser);\n\n// // // //   const handleNextPage = () => {\n// // // //     if (currentPage < Math.ceil(allUsers.length / usersPerPage)) {\n// // // //       setCurrentPage((prevPage) => prevPage + 1);\n// // // //     }\n// // // //   };\n\n// // // //   const handlePreviousPage = () => {\n// // // //     if (currentPage > 1) {\n// // // //       setCurrentPage((prevPage) => prevPage - 1);\n// // // //     }\n// // // //   };\n\n// // // //   if (loading) {\n// // // //     return <div className=\"loading\">Loading...</div>;\n// // // //   }\n\n// // // //   return (\n// // // //     <div className=\"dashboard\">\n\n// // // //       <aside className=\"sidebar\">\n// // // //         <h1>Dashboard</h1>\n// // // //         <ul>\n// // // //           <li className=\"active\">Dashboard</li>\n// // // //           <li>Users</li>\n// // // //           <li>Projects</li>\n\n// // // //           <li>Settings</li>\n// // // //         </ul>\n// // // //       </aside>\n\n// // // //       <main className=\"content\">\n// // // //         <header>\n// // // //           <h2>Dashboard</h2>\n// // // //         </header>\n\n// // // //         {role === 'admin' && (\n// // // //           <div className=\"admin-section\">\n// // // //             <h3>All-Users</h3>\n// // // //             <button className=\"btn-fetch\" onClick={fetchAllUsers} disabled={fetchingUsers}>\n// // // //               {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\n// // // //             </button>\n// // // //             {error && <p className=\"error\">{error}</p>}\n\n// // // //             <div className=\"users-list\">\n// // // //               <h3></h3>\n// // // //               {currentUsers.length === 0 ? (\n// // // //                 <p></p>\n// // // //               ) : (\n// // // //                 <table>\n// // // //                   <thead>\n// // // //                     <tr>\n// // // //                       <th>Name</th>\n// // // //                       <th>Email</th>\n\n// // // //                       <th>Actions</th>\n// // // //                     </tr>\n// // // //                   </thead>\n// // // //                   <tbody>\n// // // //                     {currentUsers.map((user) => (\n// // // //                       <tr key={user._id}>\n// // // //                         <td>{user.fullname || 'N/A'}</td>\n// // // //                         <td>{user.email}</td>\n\n// // // //                         <td>\n// // // //                           <button className=\"btn-profile\">See Profile</button>\n// // // //                         </td>\n// // // //                       </tr>\n// // // //                     ))}\n// // // //                   </tbody>\n// // // //                 </table>\n// // // //               )}\n\n// // // //               {allUsers.length > usersPerPage && (\n// // // //                 <div className=\"pagination\">\n// // // //                   <button onClick={handlePreviousPage} disabled={currentPage === 1}>\n// // // //                     Previous\n// // // //                   </button>\n// // // //                   <span>\n// // // //                     Page {currentPage} of {Math.ceil(allUsers.length / usersPerPage)}\n// // // //                   </span>\n// // // //                   <button\n// // // //                     onClick={handleNextPage}\n// // // //                     disabled={currentPage === Math.ceil(allUsers.length / usersPerPage)}\n// // // //                   >\n// // // //                     Next\n// // // //                   </button>\n// // // //                 </div>\n// // // //               )}\n// // // //             </div>\n// // // //           </div>\n// // // //         )}\n\n// // // //         {role === 'user' && (\n// // // //   <div className=\"profile-section\">\n// // // //     <h3>Your Profile</h3>\n// // // //     <div className=\"profile-card\">\n// // // //       <img\n// // // //         src=\"https://cdn.vectorstock.com/i/500p/53/42/user-member-avatar-face-profile-icon-vector-22965342.jpg\" // Placeholder for user avatar\n// // // //         alt=\"User Avatar\"\n// // // //       />\n// // // //       <div className=\"profile-info\">\n// // // //         <p className=\"profile-name\">{userInfo.name || \"User Name\"}</p>\n// // // //         <p>{userInfo.email || \"Email not available\"}</p>\n// // // //         <p>{userInfo.role ? `Role: ${userInfo.role}` : \"Role not specified\"}</p>\n// // // //       </div>\n// // // //       <div className=\"profile-actions\">\n// // // //         <button>Edit Profile</button>\n// // // //       </div>\n// // // //     </div>\n// // // //   </div>\n// // // // )}\n\n// // // //       </main>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default Dashboard;\n\n// // // Share\n\n// // // You said:\n// // // import React, { useState, useEffect } from 'react';\n// // // import axios from 'axios';\n// // // import './Dashboard.css';\n\n// // // const Dashboard = () => {\n// // //   const [role, setRole] = useState(null);\n// // //   const [userInfo, setUserInfo] = useState({});\n// // //   const [loading, setLoading] = useState(true);\n// // //   const [allUsers, setAllUsers] = useState([]);\n// // //   const [fetchingUsers, setFetchingUsers] = useState(false);\n// // //   const [error, setError] = useState(null);\n\n// // //   const [currentPage, setCurrentPage] = useState(1); \n// // //   const usersPerPage = 8; \n\n// // //   useEffect(() => {\n// // //     const fetchUserInfo = async () => {\n// // //       const token = localStorage.getItem('token');\n\n// // //       if (!token) {\n// // //         console.log('No token found, redirecting to login');\n// // //         window.location.href = '/';\n// // //         return;\n// // //       }\n\n// // //       try {\n// // //         const response = await axios.get('http://localhost:4000/api/users/profile', {\n// // //           headers: { Authorization: Bearer ${token} },\n// // //         });\n\n// // //         setUserInfo(response.data);\n// // //         setRole(response.data.role);\n// // //         setLoading(false);\n// // //       } catch (err) {\n// // //         console.error('Error fetching user data:', err);\n// // //         window.location.href = '/';\n// // //       }\n// // //     };\n\n// // //     fetchUserInfo();\n// // //   }, []);\n\n// // //   // const fetchAllUsers = async () => {\n// // //   //   const token = localStorage.getItem('token');\n\n// // //   //   if (!token) {\n// // //   //     console.log('No token found, redirecting to login');\n// // //   //     window.location.href = '/';\n// // //   //     return;\n// // //   //   }\n\n// // //   //   setFetchingUsers(true);\n\n// // //   //   try {\n// // //   //     const response = await axios.get('http://localhost:4000/api/users/admin', {\n// // //   //       headers: { Authorization: Bearer ${token} },\n// // //   //     });\n// // //   //     console.log('Fetched users:', response.data); \n\n// // //   //     setAllUsers(response.data);\n// // //   //     setFetchingUsers(false);\n// // //   //   } catch (err) {\n// // //   //     console.error('Error fetching all users:', err);\n\n// // //   //     const errorMessage =\n// // //   //       err.response?.data?.message || 'An unexpected error occurred. Please try again later.';\n// // //   //     setError(errorMessage);\n// // //   //     setFetchingUsers(false);\n// // //   //   }\n// // //   // };\n// // //   const fetchAllUsers = async () => {\n// // //     const token = localStorage.getItem('token');\n// // //     if (!token) {\n// // //       console.log('No token found, redirecting to login');\n// // //       window.location.href = '/';\n// // //       return;\n// // //     }\n\n// // //     setFetchingUsers(true);\n\n// // //     try {\n// // //       const response = await axios.get('http://localhost:4000/api/users/admin', {\n// // //         headers: { Authorization: Bearer ${token} },\n// // //       });\n// // //       console.log('Fetched users:', response.data);\n// // //       setAllUsers(response.data);\n// // //     } catch (err) {\n// // //       console.error('Error fetching all users:', err);\n// // //       const errorMessage =\n// // //         err.response?.data?.message || err.message || 'An unexpected error occurred.';\n// // //       setError(errorMessage);\n// // //     } finally {\n// // //       setFetchingUsers(false);\n// // //     }\n// // //   };\n\n// // //   // const fetchAllUsers = async () => {\n// // //   //   const token = localStorage.getItem('token');\n// // //   //   console.log('Token:', token);  // Log token\n\n// // //   //   if (!token) {\n// // //   //     console.log('No token found, redirecting to login');\n// // //   //     window.location.href = '/';\n// // //   //     return;\n// // //   //   }\n\n// // //   //   setFetchingUsers(true);\n\n// // //   //   try {\n// // //   //     const response = await axios.get('http://localhost:4000/api/users/admin', {\n// // //   //       headers: { Authorization: Bearer ${token} },\n// // //   //     });\n// // //   //     console.log('Fetched users:', response.data);  // Log response\n// // //   //     setAllUsers(response.data);\n// // //   //     setFetchingUsers(false);\n// // //   //   } catch (err) {\n// // //   //     console.error('Error fetching all users:', err);\n// // //   //     const errorMessage =\n// // //   //       err.response?.data?.message || 'An unexpected error occurred. Please try again later.';\n// // //   //     setError(errorMessage);\n// // //   //     setFetchingUsers(false);\n// // //   //   }\n// // //   // };\n\n// // //   const indexOfLastUser = currentPage * usersPerPage;\n// // //   const indexOfFirstUser = indexOfLastUser - usersPerPage;\n// // //   const currentUsers = allUsers.slice(indexOfFirstUser, indexOfLastUser);\n\n// // //   const handleNextPage = () => {\n// // //     if (currentPage < Math.ceil(allUsers.length / usersPerPage)) {\n// // //       setCurrentPage((prevPage) => prevPage + 1);\n// // //     }\n// // //   };\n\n// // //   const handlePreviousPage = () => {\n// // //     if (currentPage > 1) {\n// // //       setCurrentPage((prevPage) => prevPage - 1);\n// // //     }\n// // //   };\n\n// // //   if (loading) {\n// // //     return <div className=\"loading\">Loading...</div>;\n// // //   }\n\n// // //   return (\n// // //     <div className=\"dashboard\">\n\n// // //       <aside className=\"sidebar\">\n// // //         <h1>Dashboard</h1>\n// // //         <ul>\n// // //           <li className=\"active\">Dashboard</li>\n// // //           <li>Users</li>\n// // //           <li>Projects</li>\n\n// // //           <li>Settings</li>\n// // //         </ul>\n// // //       </aside>\n\n// // //       <main className=\"content\">\n// // //         <header>\n// // //           <h2>Dashboard</h2>\n// // //         </header>\n\n// // //         {role === 'admin' && (\n// // //           <div className=\"admin-section\">\n// // //             <h3>All-Users</h3>\n// // //             <button className=\"btn-fetch\" onClick={fetchAllUsers} disabled={fetchingUsers}>\n// // //               {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\n// // //             </button>\n// // //             {error && <p className=\"error\">{error}</p>}\n\n// // //             <div className=\"users-list\">\n// // //               <h3></h3>\n// // //               {currentUsers.length === 0 ? (\n// // //                 <p></p>\n// // //               ) : (\n// // //                 <table>\n// // //                   <thead>\n// // //                     <tr>\n// // //                       <th>Name</th>\n// // //                       <th>Email</th>\n\n// // //                       <th>Actions</th>\n// // //                     </tr>\n// // //                   </thead>\n// // //                   <tbody>\n// // //                     {currentUsers.map((user) => (\n// // //                       <tr key={user._id}>\n// // //                         <td>{user.fullname || 'N/A'}</td>\n// // //                         <td>{user.email}</td>\n\n// // //                         <td>\n// // //                           <button className=\"btn-profile\">See Profile</button>\n// // //                         </td>\n// // //                       </tr>\n// // //                     ))}\n// // //                   </tbody>\n// // //                 </table>\n// // //               )}\n\n// // //               {allUsers.length > usersPerPage && (\n// // //                 <div className=\"pagination\">\n// // //                   <button onClick={handlePreviousPage} disabled={currentPage === 1}>\n// // //                     Previous\n// // //                   </button>\n// // //                   <span>\n// // //                     Page {currentPage} of {Math.ceil(allUsers.length / usersPerPage)}\n// // //                   </span>\n// // //                   <button\n// // //                     onClick={handleNextPage}\n// // //                     disabled={currentPage === Math.ceil(allUsers.length / usersPerPage)}\n// // //                   >\n// // //                     Next\n// // //                   </button>\n// // //                 </div>\n// // //               )}\n// // //             </div>\n// // //           </div>\n// // //         )}\n\n// // //         {role === 'user' && (\n// // //   <div className=\"profile-section\">\n// // //     <h3>Your Profile</h3>\n// // //     <div className=\"profile-card\">\n// // //       <img\n// // //         src=\"https://cdn.vectorstock.com/i/500p/53/42/user-member-avatar-face-profile-icon-vector-22965342.jpg\" // Placeholder for user avatar\n// // //         alt=\"User Avatar\"\n// // //       />\n// // //       <div className=\"profile-info\">\n// // //         <p className=\"profile-name\">{userInfo.name || \"User Name\"}</p>\n// // //         <p>{userInfo.email || \"Email not available\"}</p>\n// // //         <p>{userInfo.role ? Role: ${userInfo.role} : \"Role not specified\"}</p>\n// // //       </div>\n// // //       <div className=\"profile-actions\">\n// // //         <button>Edit Profile</button>\n// // //       </div>\n// // //     </div>\n// // //   </div>\n// // // )}\n\n// // //       </main>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default Dashboard;\n// // import React, { useState, useEffect } from 'react';\n// // import axios from 'axios';\n// // import jwt_decode from 'jwt-decode';\n// // import './Dashboard.css';\n\n// // const Dashboard = () => {\n// //   const [role, setRole] = useState(null);\n// //   const [userInfo, setUserInfo] = useState({});\n// //   const [loading, setLoading] = useState(true);\n// //   const [allUsers, setAllUsers] = useState([]);\n// //   const [fetchingUsers, setFetchingUsers] = useState(false);\n// //   const [error, setError] = useState(null);\n// //   const [currentPage, setCurrentPage] = useState(1);\n\n// //   const usersPerPage = 8;\n\n// //   useEffect(() => {\n// //     const fetchUserInfo = async () => {\n// //       const token = localStorage.getItem('token');\n\n// //       if (!token) {\n// //         console.log('No token found, redirecting to login');\n// //         window.location.href = '/';\n// //         return;\n// //       }\n\n// //       try {\n// //         // Decode token to extract user info\n// //         const decoded = jwt_decode(token);\n// //         console.log('Decoded Token:', decoded);\n\n// //         // Validate token expiration\n// //         const currentTime = Math.floor(Date.now() / 1000);\n// //         if (decoded.exp < currentTime) {\n// //           console.log('Token expired, redirecting to login');\n// //           window.location.href = '/';\n// //           return;\n// //         }\n\n// //         // Fetch user profile from the backend\n// //         const response = await axios.get('http://localhost:4000/api/users/profile', {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n\n// //         setUserInfo(response.data);\n// //         setRole(decoded.role); // Use role from token\n// //         setLoading(false);\n// //       } catch (err) {\n// //         console.error('Error fetching user data:', err);\n// //         window.location.href = '/';\n// //       }\n// //     };\n\n// //     fetchUserInfo();\n// //   }, []);\n\n// //   const fetchAllUsers = async () => {\n// //     const token = localStorage.getItem('token');\n\n// //     if (!token) {\n// //       console.log('No token found, redirecting to login');\n// //       window.location.href = '/';\n// //       return;\n// //     }\n\n// //     setFetchingUsers(true);\n\n// //     try {\n// //       const response = await axios.get('http://localhost:4000/api/users/admin', {\n// //         headers: { Authorization: `Bearer ${token}` },\n// //       });\n// //       console.log('Fetched users:', response.data);\n// //       setAllUsers(response.data);\n// //     } catch (err) {\n// //       console.error('Error fetching all users:', err);\n// //       const errorMessage =\n// //         err.response?.data?.message || err.message || 'An unexpected error occurred.';\n// //       setError(errorMessage);\n// //     } finally {\n// //       setFetchingUsers(false);\n// //     }\n// //   };\n\n// //   // Pagination\n// //   const indexOfLastUser = currentPage * usersPerPage;\n// //   const indexOfFirstUser = indexOfLastUser - usersPerPage;\n// //   const currentUsers = allUsers.slice(indexOfFirstUser, indexOfLastUser);\n\n// //   const handleNextPage = () => {\n// //     if (currentPage < Math.ceil(allUsers.length / usersPerPage)) {\n// //       setCurrentPage((prevPage) => prevPage + 1);\n// //     }\n// //   };\n\n// //   const handlePreviousPage = () => {\n// //     if (currentPage > 1) {\n// //       setCurrentPage((prevPage) => prevPage - 1);\n// //     }\n// //   };\n\n// //   if (loading) {\n// //     return <div className=\"loading\">Loading...</div>;\n// //   }\n\n// //   return (\n// //     <div className=\"dashboard\">\n// //       {/* Sidebar */}\n// //       <aside className=\"sidebar\">\n// //         <h1>Dashboard</h1>\n// //         <ul>\n// //           <li className=\"active\">Dashboard</li>\n// //           <li>Users</li>\n// //           <li>Projects</li>\n// //           <li>Settings</li>\n// //         </ul>\n// //       </aside>\n\n// //       {/* Main Content */}\n// //       <main className=\"content\">\n// //         <header>\n// //           <h2>Dashboard</h2>\n// //         </header>\n\n// //         {/* Admin Section */}\n// //         {role === 'admin' && (\n// //           <div className=\"admin-section\">\n// //             <h3>All Users</h3>\n// //             <button className=\"btn-fetch\" onClick={fetchAllUsers} disabled={fetchingUsers}>\n// //               {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\n// //             </button>\n// //             {error && <p className=\"error\">{error}</p>}\n\n// //             <div className=\"users-list\">\n// //               {currentUsers.length === 0 ? (\n// //                 <p>No users found.</p>\n// //               ) : (\n// //                 <table>\n// //                   <thead>\n// //                     <tr>\n// //                       <th>Name</th>\n// //                       <th>Email</th>\n// //                       <th>Actions</th>\n// //                     </tr>\n// //                   </thead>\n// //                   <tbody>\n// //                     {currentUsers.map((user) => (\n// //                       <tr key={user._id}>\n// //                         <td>{user.fullname || 'N/A'}</td>\n// //                         <td>{user.email}</td>\n// //                         <td>\n// //                           <button className=\"btn-profile\">See Profile</button>\n// //                         </td>\n// //                       </tr>\n// //                     ))}\n// //                   </tbody>\n// //                 </table>\n// //               )}\n\n// //               {/* Pagination */}\n// //               {allUsers.length > usersPerPage && (\n// //                 <div className=\"pagination\">\n// //                   <button on\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n\n// const Dashboard = () => {\n//   const [role, setRole] = useState(null);\n//   const [userInfo, setUserInfo] = useState({});\n//   const [loading, setLoading] = useState(true);\n//   const [allUsers, setAllUsers] = useState([]);\n//   const [fetchingUsers, setFetchingUsers] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [currentPage, setCurrentPage] = useState(1);\n\n//   const usersPerPage = 8;\n\n//   useEffect(() => {\n//     const fetchUserInfo = async () => {\n//       const token = localStorage.getItem('token');\n\n//       if (!token) {\n//         console.log('No token found, redirecting to login');\n//         window.location.href = '/';\n//         return;\n//       }\n\n//         setUserInfo(response.data);\n//         setRole(decoded.role); // Use role from token\n//         setLoading(false);\n//       } catch (err) {\n//         console.error('Error fetching user data:', err);\n//         window.location.href = '/';\n//       }\n//     };\n\n//     fetchUserInfo();\n//   }, []);\n\n//   const fetchAllUsers = async () => {\n//     const token = localStorage.getItem('token');\n\n//     if (!token) {\n//       console.log('No token found, redirecting to login');\n//       window.location.href = '/';\n//       return;\n//     }\n\n//     setFetchingUsers(true);\n\n//     try {\n//       const response = await axios.get('http://localhost:4000/api/users/admin', {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       console.log('Fetched users:', response.data);\n//       setAllUsers(response.data);\n//     } catch (err) {\n//       console.error('Error fetching all users:', err);\n//       const errorMessage =\n//         err.response?.data?.message || err.message || 'An unexpected error occurred.';\n//       setError(errorMessage);\n//     } finally {\n//       setFetchingUsers(false);\n//     }\n//   };\n\n//   // Pagination\n//   const indexOfLastUser = currentPage * usersPerPage;\n//   const indexOfFirstUser = indexOfLastUser - usersPerPage;\n//   const currentUsers = allUsers.slice(indexOfFirstUser, indexOfLastUser);\n\n//   const handleNextPage = () => {\n//     if (currentPage < Math.ceil(allUsers.length / usersPerPage)) {\n//       setCurrentPage((prevPage) => prevPage + 1);\n//     }\n//   };\n\n//   const handlePreviousPage = () => {\n//     if (currentPage > 1) {\n//       setCurrentPage((prevPage) => prevPage - 1);\n//     }\n//   };\n\n//   if (loading) {\n//     return <div className=\"loading\">Loading...</div>;\n//   }\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* Sidebar */}\n//       <aside className=\"sidebar\">\n//         <h1>Dashboard</h1>\n//         <ul>\n//           <li className=\"active\">Dashboard</li>\n//           <li>Users</li>\n//           <li>Projects</li>\n//           <li>Settings</li>\n//         </ul>\n//       </aside>\n\n//       {/* Main Content */}\n//       <main className=\"content\">\n//         <header>\n//           <h2>Dashboard</h2>\n//         </header>\n\n//         {/* Admin Section */}\n//         {role === 'admin' && (\n//           <div className=\"admin-section\">\n//             <h3>All Users</h3>\n//             <button className=\"btn-fetch\" onClick={fetchAllUsers} disabled={fetchingUsers}>\n//               {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\n//             </button>\n//             {error && <p className=\"error\">{error}</p>}\n\n//             <div className=\"users-list\">\n//               {currentUsers.length === 0 ? (\n//                 <p>No users found.</p>\n//               ) : (\n//                 <table>\n//                   <thead>\n//                     <tr>\n//                       <th>Name</th>\n//                       <th>Email</th>\n//                       <th>Actions</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {currentUsers.map((user) => (\n//                       <tr key={user._id}>\n//                         <td>{user.fullname || 'N/A'}</td>\n//                         <td>{user.email}</td>\n//                         <td>\n//                           <button className=\"btn-profile\">See Profile</button>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                 </table>\n//               )}\n\n//               {/* Pagination */}\n//               {allUsers.length > usersPerPage && (\n//                 <div className=\"pagination\">\n//                   <button onClick={handlePreviousPage} disabled={currentPage === 1}>\n//                     Previous\n//                   </button>\n//                   <span>\n//                     Page {currentPage} of {Math.ceil(allUsers.length / usersPerPage)}\n//                   </span>\n//                   <button\n//                     onClick={handleNextPage}\n//                     disabled={currentPage === Math.ceil(allUsers.length / usersPerPage)}\n//                   >\n//                     Next\n//                   </button>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n//         )}\n\n//         {/* User Section */}\n//         {role === 'user' && (\n//           <div className=\"profile-section\">\n//             <h3>Your Profile</h3>\n//             <div className=\"profile-card\">\n//               <img\n//                 src=\"https://cdn.vectorstock.com/i/500p/53/42/user-member-avatar-face-profile-icon-vector-22965342.jpg\"\n//                 alt=\"User Avatar\"\n//               />\n//               <div className=\"profile-info\">\n//                 <p className=\"profile-name\">{userInfo.name || 'User Name'}</p>\n//                 <p>{userInfo.email || 'Email not available'}</p>\n//                 <p>{userInfo.role ? `Role: ${userInfo.role}` : 'Role not specified'}</p>\n//               </div>\n//               <div className=\"profile-actions\">\n//                 <button>Edit Profile</button>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["C:/Users/Dell/Desktop/Authentication-Task/frontsidee/src/components/Dashboard.js"],"sourcesContent":["// // // // import React, { useState, useEffect } from 'react';\r\n// // // // import axios from 'axios';\r\n// // // // import './Dashboard.css';\r\n\r\n// // // // const Dashboard = () => {\r\n// // // //   const [role, setRole] = useState(null);\r\n// // // //   const [userInfo, setUserInfo] = useState({});\r\n// // // //   const [loading, setLoading] = useState(true);\r\n// // // //   const [allUsers, setAllUsers] = useState([]);\r\n// // // //   const [fetchingUsers, setFetchingUsers] = useState(false);\r\n// // // //   const [error, setError] = useState(null);\r\n\r\n// // // //   const [currentPage, setCurrentPage] = useState(1); \r\n// // // //   const usersPerPage = 8; \r\n\r\n// // // //   useEffect(() => {\r\n// // // //     const fetchUserInfo = async () => {\r\n// // // //       const token = localStorage.getItem('token');\r\n// // // //       console.log(token)\r\n\r\n// // // //       if (!token) {\r\n// // // //         console.log('No token found, redirecting to login');\r\n// // // //         window.location.href = '/';\r\n// // // //         return;\r\n// // // //       }\r\n\r\n// // // //       try {\r\n// // // //         const response = await axios.get('http://localhost:4000/api/users/profile', {\r\n// // // //           headers: { Authorization: `Bearer ${token}` },\r\n// // // //         });\r\n\r\n// // // //         setUserInfo(response.data);\r\n// // // //         setRole(response.data.role);\r\n// // // //         setLoading(false);\r\n// // // //       } catch (err) {\r\n// // // //         console.error('Error fetching user data:', err);\r\n// // // //         window.location.href = '/';\r\n// // // //       }\r\n// // // //     };\r\n\r\n// // // //     fetchUserInfo();\r\n// // // //   }, []);\r\n\r\n \r\n\r\n// // // //   const fetchAllUsers = async () => {\r\n// // // //     const token = localStorage.getItem('token');\r\n// // // //     console.log('Token:', token); \r\n    \r\n// // // //     if (!token) {\r\n// // // //       console.log('No token found, redirecting to login');\r\n// // // //       window.location.href = '/';\r\n// // // //       return;\r\n// // // //     }\r\n  \r\n// // // //     setFetchingUsers(true);\r\n  \r\n// // // //     try {\r\n// // // //       const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n// // // //         headers: { Authorization: `Bearer ${token}` },\r\n// // // //       });\r\n// // // //       console.log('Fetched users:', response.data);  \r\n// // // //       setAllUsers(response.data);\r\n// // // //       setFetchingUsers(false);\r\n// // // //     } catch (err) {\r\n// // // //       console.error('Error fetching all users:', err);\r\n// // // //       setError(err.message);\r\n// // // //       setFetchingUsers(false);\r\n// // // //     }\r\n// // // //   };\r\n  \r\n\r\n  \r\n// // // //   const indexOfLastUser = currentPage * usersPerPage;\r\n// // // //   const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n// // // //   const currentUsers = allUsers.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n// // // //   const handleNextPage = () => {\r\n// // // //     if (currentPage < Math.ceil(allUsers.length / usersPerPage)) {\r\n// // // //       setCurrentPage((prevPage) => prevPage + 1);\r\n// // // //     }\r\n// // // //   };\r\n\r\n// // // //   const handlePreviousPage = () => {\r\n// // // //     if (currentPage > 1) {\r\n// // // //       setCurrentPage((prevPage) => prevPage - 1);\r\n// // // //     }\r\n// // // //   };\r\n\r\n// // // //   if (loading) {\r\n// // // //     return <div className=\"loading\">Loading...</div>;\r\n// // // //   }\r\n\r\n// // // //   return (\r\n// // // //     <div className=\"dashboard\">\r\n     \r\n// // // //       <aside className=\"sidebar\">\r\n// // // //         <h1>Dashboard</h1>\r\n// // // //         <ul>\r\n// // // //           <li className=\"active\">Dashboard</li>\r\n// // // //           <li>Users</li>\r\n// // // //           <li>Projects</li>\r\n          \r\n// // // //           <li>Settings</li>\r\n// // // //         </ul>\r\n// // // //       </aside>\r\n\r\n   \r\n// // // //       <main className=\"content\">\r\n// // // //         <header>\r\n// // // //           <h2>Dashboard</h2>\r\n// // // //         </header>\r\n\r\n// // // //         {role === 'admin' && (\r\n// // // //           <div className=\"admin-section\">\r\n// // // //             <h3>All-Users</h3>\r\n// // // //             <button className=\"btn-fetch\" onClick={fetchAllUsers} disabled={fetchingUsers}>\r\n// // // //               {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\r\n// // // //             </button>\r\n// // // //             {error && <p className=\"error\">{error}</p>}\r\n\r\n// // // //             <div className=\"users-list\">\r\n// // // //               <h3></h3>\r\n// // // //               {currentUsers.length === 0 ? (\r\n// // // //                 <p></p>\r\n// // // //               ) : (\r\n// // // //                 <table>\r\n// // // //                   <thead>\r\n// // // //                     <tr>\r\n// // // //                       <th>Name</th>\r\n// // // //                       <th>Email</th>\r\n                     \r\n// // // //                       <th>Actions</th>\r\n// // // //                     </tr>\r\n// // // //                   </thead>\r\n// // // //                   <tbody>\r\n// // // //                     {currentUsers.map((user) => (\r\n// // // //                       <tr key={user._id}>\r\n// // // //                         <td>{user.fullname || 'N/A'}</td>\r\n// // // //                         <td>{user.email}</td>\r\n                       \r\n// // // //                         <td>\r\n// // // //                           <button className=\"btn-profile\">See Profile</button>\r\n// // // //                         </td>\r\n// // // //                       </tr>\r\n// // // //                     ))}\r\n// // // //                   </tbody>\r\n// // // //                 </table>\r\n// // // //               )}\r\n\r\n             \r\n// // // //               {allUsers.length > usersPerPage && (\r\n// // // //                 <div className=\"pagination\">\r\n// // // //                   <button onClick={handlePreviousPage} disabled={currentPage === 1}>\r\n// // // //                     Previous\r\n// // // //                   </button>\r\n// // // //                   <span>\r\n// // // //                     Page {currentPage} of {Math.ceil(allUsers.length / usersPerPage)}\r\n// // // //                   </span>\r\n// // // //                   <button\r\n// // // //                     onClick={handleNextPage}\r\n// // // //                     disabled={currentPage === Math.ceil(allUsers.length / usersPerPage)}\r\n// // // //                   >\r\n// // // //                     Next\r\n// // // //                   </button>\r\n// // // //                 </div>\r\n// // // //               )}\r\n// // // //             </div>\r\n// // // //           </div>\r\n// // // //         )}\r\n\r\n       \r\n// // // //         {role === 'user' && (\r\n// // // //   <div className=\"profile-section\">\r\n// // // //     <h3>Your Profile</h3>\r\n// // // //     <div className=\"profile-card\">\r\n// // // //       <img\r\n// // // //         src=\"https://cdn.vectorstock.com/i/500p/53/42/user-member-avatar-face-profile-icon-vector-22965342.jpg\" // Placeholder for user avatar\r\n// // // //         alt=\"User Avatar\"\r\n// // // //       />\r\n// // // //       <div className=\"profile-info\">\r\n// // // //         <p className=\"profile-name\">{userInfo.name || \"User Name\"}</p>\r\n// // // //         <p>{userInfo.email || \"Email not available\"}</p>\r\n// // // //         <p>{userInfo.role ? `Role: ${userInfo.role}` : \"Role not specified\"}</p>\r\n// // // //       </div>\r\n// // // //       <div className=\"profile-actions\">\r\n// // // //         <button>Edit Profile</button>\r\n// // // //       </div>\r\n// // // //     </div>\r\n// // // //   </div>\r\n// // // // )}\r\n\r\n// // // //       </main>\r\n// // // //     </div>\r\n// // // //   );\r\n// // // // };\r\n\r\n// // // // export default Dashboard;\r\n\r\n// // // Share\r\n\r\n\r\n// // // You said:\r\n// // // import React, { useState, useEffect } from 'react';\r\n// // // import axios from 'axios';\r\n// // // import './Dashboard.css';\r\n\r\n// // // const Dashboard = () => {\r\n// // //   const [role, setRole] = useState(null);\r\n// // //   const [userInfo, setUserInfo] = useState({});\r\n// // //   const [loading, setLoading] = useState(true);\r\n// // //   const [allUsers, setAllUsers] = useState([]);\r\n// // //   const [fetchingUsers, setFetchingUsers] = useState(false);\r\n// // //   const [error, setError] = useState(null);\r\n\r\n// // //   const [currentPage, setCurrentPage] = useState(1); \r\n// // //   const usersPerPage = 8; \r\n\r\n// // //   useEffect(() => {\r\n// // //     const fetchUserInfo = async () => {\r\n// // //       const token = localStorage.getItem('token');\r\n\r\n// // //       if (!token) {\r\n// // //         console.log('No token found, redirecting to login');\r\n// // //         window.location.href = '/';\r\n// // //         return;\r\n// // //       }\r\n\r\n// // //       try {\r\n// // //         const response = await axios.get('http://localhost:4000/api/users/profile', {\r\n// // //           headers: { Authorization: Bearer ${token} },\r\n// // //         });\r\n\r\n// // //         setUserInfo(response.data);\r\n// // //         setRole(response.data.role);\r\n// // //         setLoading(false);\r\n// // //       } catch (err) {\r\n// // //         console.error('Error fetching user data:', err);\r\n// // //         window.location.href = '/';\r\n// // //       }\r\n// // //     };\r\n\r\n// // //     fetchUserInfo();\r\n// // //   }, []);\r\n\r\n// // //   // const fetchAllUsers = async () => {\r\n// // //   //   const token = localStorage.getItem('token');\r\n\r\n// // //   //   if (!token) {\r\n// // //   //     console.log('No token found, redirecting to login');\r\n// // //   //     window.location.href = '/';\r\n// // //   //     return;\r\n// // //   //   }\r\n\r\n// // //   //   setFetchingUsers(true);\r\n\r\n// // //   //   try {\r\n// // //   //     const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n// // //   //       headers: { Authorization: Bearer ${token} },\r\n// // //   //     });\r\n// // //   //     console.log('Fetched users:', response.data); \r\n\r\n      \r\n// // //   //     setAllUsers(response.data);\r\n// // //   //     setFetchingUsers(false);\r\n// // //   //   } catch (err) {\r\n// // //   //     console.error('Error fetching all users:', err);\r\n\r\n      \r\n// // //   //     const errorMessage =\r\n// // //   //       err.response?.data?.message || 'An unexpected error occurred. Please try again later.';\r\n// // //   //     setError(errorMessage);\r\n// // //   //     setFetchingUsers(false);\r\n// // //   //   }\r\n// // //   // };\r\n// // //   const fetchAllUsers = async () => {\r\n// // //     const token = localStorage.getItem('token');\r\n// // //     if (!token) {\r\n// // //       console.log('No token found, redirecting to login');\r\n// // //       window.location.href = '/';\r\n// // //       return;\r\n// // //     }\r\n  \r\n// // //     setFetchingUsers(true);\r\n  \r\n// // //     try {\r\n// // //       const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n// // //         headers: { Authorization: Bearer ${token} },\r\n// // //       });\r\n// // //       console.log('Fetched users:', response.data);\r\n// // //       setAllUsers(response.data);\r\n// // //     } catch (err) {\r\n// // //       console.error('Error fetching all users:', err);\r\n// // //       const errorMessage =\r\n// // //         err.response?.data?.message || err.message || 'An unexpected error occurred.';\r\n// // //       setError(errorMessage);\r\n// // //     } finally {\r\n// // //       setFetchingUsers(false);\r\n// // //     }\r\n// // //   };\r\n  \r\n// // //   // const fetchAllUsers = async () => {\r\n// // //   //   const token = localStorage.getItem('token');\r\n// // //   //   console.log('Token:', token);  // Log token\r\n  \r\n// // //   //   if (!token) {\r\n// // //   //     console.log('No token found, redirecting to login');\r\n// // //   //     window.location.href = '/';\r\n// // //   //     return;\r\n// // //   //   }\r\n  \r\n// // //   //   setFetchingUsers(true);\r\n  \r\n// // //   //   try {\r\n// // //   //     const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n// // //   //       headers: { Authorization: Bearer ${token} },\r\n// // //   //     });\r\n// // //   //     console.log('Fetched users:', response.data);  // Log response\r\n// // //   //     setAllUsers(response.data);\r\n// // //   //     setFetchingUsers(false);\r\n// // //   //   } catch (err) {\r\n// // //   //     console.error('Error fetching all users:', err);\r\n// // //   //     const errorMessage =\r\n// // //   //       err.response?.data?.message || 'An unexpected error occurred. Please try again later.';\r\n// // //   //     setError(errorMessage);\r\n// // //   //     setFetchingUsers(false);\r\n// // //   //   }\r\n// // //   // };\r\n  \r\n\r\n  \r\n// // //   const indexOfLastUser = currentPage * usersPerPage;\r\n// // //   const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n// // //   const currentUsers = allUsers.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n// // //   const handleNextPage = () => {\r\n// // //     if (currentPage < Math.ceil(allUsers.length / usersPerPage)) {\r\n// // //       setCurrentPage((prevPage) => prevPage + 1);\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   const handlePreviousPage = () => {\r\n// // //     if (currentPage > 1) {\r\n// // //       setCurrentPage((prevPage) => prevPage - 1);\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   if (loading) {\r\n// // //     return <div className=\"loading\">Loading...</div>;\r\n// // //   }\r\n\r\n// // //   return (\r\n// // //     <div className=\"dashboard\">\r\n     \r\n// // //       <aside className=\"sidebar\">\r\n// // //         <h1>Dashboard</h1>\r\n// // //         <ul>\r\n// // //           <li className=\"active\">Dashboard</li>\r\n// // //           <li>Users</li>\r\n// // //           <li>Projects</li>\r\n          \r\n// // //           <li>Settings</li>\r\n// // //         </ul>\r\n// // //       </aside>\r\n\r\n   \r\n// // //       <main className=\"content\">\r\n// // //         <header>\r\n// // //           <h2>Dashboard</h2>\r\n// // //         </header>\r\n\r\n// // //         {role === 'admin' && (\r\n// // //           <div className=\"admin-section\">\r\n// // //             <h3>All-Users</h3>\r\n// // //             <button className=\"btn-fetch\" onClick={fetchAllUsers} disabled={fetchingUsers}>\r\n// // //               {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\r\n// // //             </button>\r\n// // //             {error && <p className=\"error\">{error}</p>}\r\n\r\n// // //             <div className=\"users-list\">\r\n// // //               <h3></h3>\r\n// // //               {currentUsers.length === 0 ? (\r\n// // //                 <p></p>\r\n// // //               ) : (\r\n// // //                 <table>\r\n// // //                   <thead>\r\n// // //                     <tr>\r\n// // //                       <th>Name</th>\r\n// // //                       <th>Email</th>\r\n                     \r\n// // //                       <th>Actions</th>\r\n// // //                     </tr>\r\n// // //                   </thead>\r\n// // //                   <tbody>\r\n// // //                     {currentUsers.map((user) => (\r\n// // //                       <tr key={user._id}>\r\n// // //                         <td>{user.fullname || 'N/A'}</td>\r\n// // //                         <td>{user.email}</td>\r\n                       \r\n// // //                         <td>\r\n// // //                           <button className=\"btn-profile\">See Profile</button>\r\n// // //                         </td>\r\n// // //                       </tr>\r\n// // //                     ))}\r\n// // //                   </tbody>\r\n// // //                 </table>\r\n// // //               )}\r\n\r\n             \r\n// // //               {allUsers.length > usersPerPage && (\r\n// // //                 <div className=\"pagination\">\r\n// // //                   <button onClick={handlePreviousPage} disabled={currentPage === 1}>\r\n// // //                     Previous\r\n// // //                   </button>\r\n// // //                   <span>\r\n// // //                     Page {currentPage} of {Math.ceil(allUsers.length / usersPerPage)}\r\n// // //                   </span>\r\n// // //                   <button\r\n// // //                     onClick={handleNextPage}\r\n// // //                     disabled={currentPage === Math.ceil(allUsers.length / usersPerPage)}\r\n// // //                   >\r\n// // //                     Next\r\n// // //                   </button>\r\n// // //                 </div>\r\n// // //               )}\r\n// // //             </div>\r\n// // //           </div>\r\n// // //         )}\r\n\r\n       \r\n// // //         {role === 'user' && (\r\n// // //   <div className=\"profile-section\">\r\n// // //     <h3>Your Profile</h3>\r\n// // //     <div className=\"profile-card\">\r\n// // //       <img\r\n// // //         src=\"https://cdn.vectorstock.com/i/500p/53/42/user-member-avatar-face-profile-icon-vector-22965342.jpg\" // Placeholder for user avatar\r\n// // //         alt=\"User Avatar\"\r\n// // //       />\r\n// // //       <div className=\"profile-info\">\r\n// // //         <p className=\"profile-name\">{userInfo.name || \"User Name\"}</p>\r\n// // //         <p>{userInfo.email || \"Email not available\"}</p>\r\n// // //         <p>{userInfo.role ? Role: ${userInfo.role} : \"Role not specified\"}</p>\r\n// // //       </div>\r\n// // //       <div className=\"profile-actions\">\r\n// // //         <button>Edit Profile</button>\r\n// // //       </div>\r\n// // //     </div>\r\n// // //   </div>\r\n// // // )}\r\n\r\n// // //       </main>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default Dashboard;\r\n// // import React, { useState, useEffect } from 'react';\r\n// // import axios from 'axios';\r\n// // import jwt_decode from 'jwt-decode';\r\n// // import './Dashboard.css';\r\n\r\n// // const Dashboard = () => {\r\n// //   const [role, setRole] = useState(null);\r\n// //   const [userInfo, setUserInfo] = useState({});\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [allUsers, setAllUsers] = useState([]);\r\n// //   const [fetchingUsers, setFetchingUsers] = useState(false);\r\n// //   const [error, setError] = useState(null);\r\n// //   const [currentPage, setCurrentPage] = useState(1);\r\n\r\n// //   const usersPerPage = 8;\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchUserInfo = async () => {\r\n// //       const token = localStorage.getItem('token');\r\n\r\n// //       if (!token) {\r\n// //         console.log('No token found, redirecting to login');\r\n// //         window.location.href = '/';\r\n// //         return;\r\n// //       }\r\n\r\n// //       try {\r\n// //         // Decode token to extract user info\r\n// //         const decoded = jwt_decode(token);\r\n// //         console.log('Decoded Token:', decoded);\r\n\r\n// //         // Validate token expiration\r\n// //         const currentTime = Math.floor(Date.now() / 1000);\r\n// //         if (decoded.exp < currentTime) {\r\n// //           console.log('Token expired, redirecting to login');\r\n// //           window.location.href = '/';\r\n// //           return;\r\n// //         }\r\n\r\n// //         // Fetch user profile from the backend\r\n// //         const response = await axios.get('http://localhost:4000/api/users/profile', {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n\r\n// //         setUserInfo(response.data);\r\n// //         setRole(decoded.role); // Use role from token\r\n// //         setLoading(false);\r\n// //       } catch (err) {\r\n// //         console.error('Error fetching user data:', err);\r\n// //         window.location.href = '/';\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchUserInfo();\r\n// //   }, []);\r\n\r\n// //   const fetchAllUsers = async () => {\r\n// //     const token = localStorage.getItem('token');\r\n\r\n// //     if (!token) {\r\n// //       console.log('No token found, redirecting to login');\r\n// //       window.location.href = '/';\r\n// //       return;\r\n// //     }\r\n\r\n// //     setFetchingUsers(true);\r\n\r\n// //     try {\r\n// //       const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n// //         headers: { Authorization: `Bearer ${token}` },\r\n// //       });\r\n// //       console.log('Fetched users:', response.data);\r\n// //       setAllUsers(response.data);\r\n// //     } catch (err) {\r\n// //       console.error('Error fetching all users:', err);\r\n// //       const errorMessage =\r\n// //         err.response?.data?.message || err.message || 'An unexpected error occurred.';\r\n// //       setError(errorMessage);\r\n// //     } finally {\r\n// //       setFetchingUsers(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   // Pagination\r\n// //   const indexOfLastUser = currentPage * usersPerPage;\r\n// //   const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n// //   const currentUsers = allUsers.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n// //   const handleNextPage = () => {\r\n// //     if (currentPage < Math.ceil(allUsers.length / usersPerPage)) {\r\n// //       setCurrentPage((prevPage) => prevPage + 1);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handlePreviousPage = () => {\r\n// //     if (currentPage > 1) {\r\n// //       setCurrentPage((prevPage) => prevPage - 1);\r\n// //     }\r\n// //   };\r\n\r\n// //   if (loading) {\r\n// //     return <div className=\"loading\">Loading...</div>;\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div className=\"dashboard\">\r\n// //       {/* Sidebar */}\r\n// //       <aside className=\"sidebar\">\r\n// //         <h1>Dashboard</h1>\r\n// //         <ul>\r\n// //           <li className=\"active\">Dashboard</li>\r\n// //           <li>Users</li>\r\n// //           <li>Projects</li>\r\n// //           <li>Settings</li>\r\n// //         </ul>\r\n// //       </aside>\r\n\r\n// //       {/* Main Content */}\r\n// //       <main className=\"content\">\r\n// //         <header>\r\n// //           <h2>Dashboard</h2>\r\n// //         </header>\r\n\r\n// //         {/* Admin Section */}\r\n// //         {role === 'admin' && (\r\n// //           <div className=\"admin-section\">\r\n// //             <h3>All Users</h3>\r\n// //             <button className=\"btn-fetch\" onClick={fetchAllUsers} disabled={fetchingUsers}>\r\n// //               {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\r\n// //             </button>\r\n// //             {error && <p className=\"error\">{error}</p>}\r\n\r\n// //             <div className=\"users-list\">\r\n// //               {currentUsers.length === 0 ? (\r\n// //                 <p>No users found.</p>\r\n// //               ) : (\r\n// //                 <table>\r\n// //                   <thead>\r\n// //                     <tr>\r\n// //                       <th>Name</th>\r\n// //                       <th>Email</th>\r\n// //                       <th>Actions</th>\r\n// //                     </tr>\r\n// //                   </thead>\r\n// //                   <tbody>\r\n// //                     {currentUsers.map((user) => (\r\n// //                       <tr key={user._id}>\r\n// //                         <td>{user.fullname || 'N/A'}</td>\r\n// //                         <td>{user.email}</td>\r\n// //                         <td>\r\n// //                           <button className=\"btn-profile\">See Profile</button>\r\n// //                         </td>\r\n// //                       </tr>\r\n// //                     ))}\r\n// //                   </tbody>\r\n// //                 </table>\r\n// //               )}\r\n\r\n// //               {/* Pagination */}\r\n// //               {allUsers.length > usersPerPage && (\r\n// //                 <div className=\"pagination\">\r\n// //                   <button on\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import './Dashboard.css';\r\n\r\n// const Dashboard = () => {\r\n//   const [role, setRole] = useState(null);\r\n//   const [userInfo, setUserInfo] = useState({});\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [allUsers, setAllUsers] = useState([]);\r\n//   const [fetchingUsers, setFetchingUsers] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n\r\n//   const usersPerPage = 8;\r\n\r\n//   useEffect(() => {\r\n//     const fetchUserInfo = async () => {\r\n//       const token = localStorage.getItem('token');\r\n\r\n//       if (!token) {\r\n//         console.log('No token found, redirecting to login');\r\n//         window.location.href = '/';\r\n//         return;\r\n//       }\r\n\r\n      \r\n\r\n       \r\n\r\n//         setUserInfo(response.data);\r\n//         setRole(decoded.role); // Use role from token\r\n//         setLoading(false);\r\n//       } catch (err) {\r\n//         console.error('Error fetching user data:', err);\r\n//         window.location.href = '/';\r\n//       }\r\n//     };\r\n\r\n//     fetchUserInfo();\r\n//   }, []);\r\n\r\n//   const fetchAllUsers = async () => {\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     if (!token) {\r\n//       console.log('No token found, redirecting to login');\r\n//       window.location.href = '/';\r\n//       return;\r\n//     }\r\n\r\n//     setFetchingUsers(true);\r\n\r\n//     try {\r\n//       const response = await axios.get('http://localhost:4000/api/users/admin', {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n//       console.log('Fetched users:', response.data);\r\n//       setAllUsers(response.data);\r\n//     } catch (err) {\r\n//       console.error('Error fetching all users:', err);\r\n//       const errorMessage =\r\n//         err.response?.data?.message || err.message || 'An unexpected error occurred.';\r\n//       setError(errorMessage);\r\n//     } finally {\r\n//       setFetchingUsers(false);\r\n//     }\r\n//   };\r\n\r\n//   // Pagination\r\n//   const indexOfLastUser = currentPage * usersPerPage;\r\n//   const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n//   const currentUsers = allUsers.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n//   const handleNextPage = () => {\r\n//     if (currentPage < Math.ceil(allUsers.length / usersPerPage)) {\r\n//       setCurrentPage((prevPage) => prevPage + 1);\r\n//     }\r\n//   };\r\n\r\n//   const handlePreviousPage = () => {\r\n//     if (currentPage > 1) {\r\n//       setCurrentPage((prevPage) => prevPage - 1);\r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div className=\"loading\">Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"dashboard\">\r\n//       {/* Sidebar */}\r\n//       <aside className=\"sidebar\">\r\n//         <h1>Dashboard</h1>\r\n//         <ul>\r\n//           <li className=\"active\">Dashboard</li>\r\n//           <li>Users</li>\r\n//           <li>Projects</li>\r\n//           <li>Settings</li>\r\n//         </ul>\r\n//       </aside>\r\n\r\n//       {/* Main Content */}\r\n//       <main className=\"content\">\r\n//         <header>\r\n//           <h2>Dashboard</h2>\r\n//         </header>\r\n\r\n//         {/* Admin Section */}\r\n//         {role === 'admin' && (\r\n//           <div className=\"admin-section\">\r\n//             <h3>All Users</h3>\r\n//             <button className=\"btn-fetch\" onClick={fetchAllUsers} disabled={fetchingUsers}>\r\n//               {fetchingUsers ? 'Loading users...' : 'Fetch All Users'}\r\n//             </button>\r\n//             {error && <p className=\"error\">{error}</p>}\r\n\r\n//             <div className=\"users-list\">\r\n//               {currentUsers.length === 0 ? (\r\n//                 <p>No users found.</p>\r\n//               ) : (\r\n//                 <table>\r\n//                   <thead>\r\n//                     <tr>\r\n//                       <th>Name</th>\r\n//                       <th>Email</th>\r\n//                       <th>Actions</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody>\r\n//                     {currentUsers.map((user) => (\r\n//                       <tr key={user._id}>\r\n//                         <td>{user.fullname || 'N/A'}</td>\r\n//                         <td>{user.email}</td>\r\n//                         <td>\r\n//                           <button className=\"btn-profile\">See Profile</button>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                 </table>\r\n//               )}\r\n\r\n//               {/* Pagination */}\r\n//               {allUsers.length > usersPerPage && (\r\n//                 <div className=\"pagination\">\r\n//                   <button onClick={handlePreviousPage} disabled={currentPage === 1}>\r\n//                     Previous\r\n//                   </button>\r\n//                   <span>\r\n//                     Page {currentPage} of {Math.ceil(allUsers.length / usersPerPage)}\r\n//                   </span>\r\n//                   <button\r\n//                     onClick={handleNextPage}\r\n//                     disabled={currentPage === Math.ceil(allUsers.length / usersPerPage)}\r\n//                   >\r\n//                     Next\r\n//                   </button>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* User Section */}\r\n//         {role === 'user' && (\r\n//           <div className=\"profile-section\">\r\n//             <h3>Your Profile</h3>\r\n//             <div className=\"profile-card\">\r\n//               <img\r\n//                 src=\"https://cdn.vectorstock.com/i/500p/53/42/user-member-avatar-face-profile-icon-vector-22965342.jpg\"\r\n//                 alt=\"User Avatar\"\r\n//               />\r\n//               <div className=\"profile-info\">\r\n//                 <p className=\"profile-name\">{userInfo.name || 'User Name'}</p>\r\n//                 <p>{userInfo.email || 'Email not available'}</p>\r\n//                 <p>{userInfo.role ? `Role: ${userInfo.role}` : 'Role not specified'}</p>\r\n//               </div>\r\n//               <div className=\"profile-actions\">\r\n//                 <button>Edit Profile</button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}